From 93e18544195dea042937aa9ec3646c0b49da8779 Mon Sep 17 00:00:00 2001
From: Krzysztof Tarnowski <krzysztof.tarnowski@ymail.com>
Date: Tue, 1 Feb 2011 10:26:26 +0100
Subject: [PATCH 2/4] Implemented back-end logic for mission reset feature. The feature is integrated with MissionPageState class.

---
 mysite/missions/base/views.py |   17 +++++++++++++++++
 mysite/missions/tar/views.py  |   17 ++++++++++++++++-
 mysite/urls.py                |    2 ++
 3 files changed, 35 insertions(+), 1 deletions(-)

diff --git a/mysite/missions/base/views.py b/mysite/missions/base/views.py
index 5677b79..279105e 100644
--- a/mysite/missions/base/views.py
+++ b/mysite/missions/base/views.py
@@ -2,6 +2,7 @@
 # Copyright (C) 2010 Jack Grigg
 # Copyright (C) 2010, 2011 OpenHatch, Inc.
 # Copyright (C) 2010 John Stumpo
+# Copyright (C) 2011 Krzysztof Tarnowski (krzysztof.tarnowski@ymail.com)
 #
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU Affero General Public License as published by
@@ -43,6 +44,7 @@ def make_download(content, filename, mimetype='application/octet-stream'):
 class MissionPageState(object):
     def __init__(self, request, passed_data, mission_name):
         self.mission_name = mission_name
+        self.mission_parts = None
         self.this_mission_page_short_name = ''
         self.request = request
         self.passed_data = passed_data
@@ -66,6 +68,21 @@ class MissionPageState(object):
             else:
                 data['mission_step_prerequisites_passed'] = True
         return (data, person)
+    
+    def reset(self, mission_parts=None):
+        ''' Resets whole mission or selected steps.
+        
+        Args:
+            mission_parts: A list of names for mission steps to reset.
+        '''
+        mission_parts = mission_parts and mission_parts or self.mission_parts
+        
+        if mission_parts:
+            profile = self.request.user.get_profile()        
+            
+            for part_name in mission_parts:
+                if part_name in self.mission_parts:
+                    controllers.unset_mission_completed(profile, part_name)    
 
 # This is the /missions/ page.
 @view
diff --git a/mysite/missions/tar/views.py b/mysite/missions/tar/views.py
index 3502e61..7e3ec75 100644
--- a/mysite/missions/tar/views.py
+++ b/mysite/missions/tar/views.py
@@ -17,6 +17,8 @@
 # You should have received a copy of the GNU Affero General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
+from django.http import HttpResponse
+
 from mysite.missions.base.views import *
 from mysite.missions.tar import forms, controllers
 
@@ -25,6 +27,19 @@ from mysite.missions.tar import forms, controllers
 ### Forms submit to this, and we use these to validate input and/or
 ### modify the information stored about the user, such as recording
 ### that a mission was successfully completed.
+def reset(request):
+    ''' Resets the state of the Tar mission '''
+    if request.method == 'POST' and request.POST['mission_parts']:
+        mission_parts = request.POST['mission_parts'].split(',')
+    
+        state = TarMissionPageState(request, None)
+        state.reset(mission_parts)
+        message = 'Operation successful'
+    else:
+        message = 'An error occured'
+    
+    return HttpResponse(message)
+
 def upload(request):
     # Initialize data array and some default values.
     data = {}
@@ -83,6 +98,7 @@ def extract_mission_upload(request):
 class TarMissionPageState(MissionPageState):
     def __init__(self, request, passed_data):
         super(TarMissionPageState, self).__init__(request, passed_data, 'Tar')
+        self.mission_parts = ['tar', 'tar_extract',]
 
     def as_dict_for_template_context(self):
         (data, person) = self.get_base_data_dict_and_person()
@@ -130,4 +146,3 @@ def hints(request, passed_data={}):
     state.this_mission_page_short_name = 'Hints'
     return (request, 'missions/tar/hints.html',
             state.as_dict_for_template_context())
-
diff --git a/mysite/urls.py b/mysite/urls.py
index 8a1ab5b..eff2108 100644
--- a/mysite/urls.py
+++ b/mysite/urls.py
@@ -4,6 +4,7 @@
 # Copyright (C) 2009 Karen Rustad
 # Copyright (C) 2009, 2010 OpenHatch, Inc.
 # Copyright (C) 2010 John Stumpo
+# Copyright (C) 2011 Krzysztof Tarnowski (krzysztof.tarnowski@ymail.com)
 #
 # This program is free software: you can redistribute it and/or modify
 # it under the terms of the GNU Affero General Public License as published by
@@ -92,6 +93,7 @@ urlpatterns = patterns('',
         # Mission-related URLs
         (r'^missions/$', 'mysite.missions.base.views.main_page'),
         (r'^missions/tar$', 'mysite.missions.tar.views.about'),
+        (r'^missions/tar/reset$', 'mysite.missions.tar.views.reset'),
         (r'^missions/tar/unpacking$', 'mysite.missions.tar.views.unpacking'),
         (r'^missions/tar/creating$', 'mysite.missions.tar.views.creating'),
         (r'^missions/tar/hints$', 'mysite.missions.tar.views.hints'),
-- 
1.7.3.5

