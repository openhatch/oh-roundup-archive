diff --git a/mysite/missions/diffpatch/controllers.py b/mysite/missions/diffpatch/controllers.py
index 07f2c96..ab81ec1 100644
--- a/mysite/missions/diffpatch/controllers.py
+++ b/mysite/missions/diffpatch/controllers.py
@@ -115,7 +115,13 @@ class DiffRecursiveMission(object):
 
             # Check that it will apply correctly to the file.
             if not the_patch._match_file_hunks(full_filename, hunks):
-                raise IncorrectPatch, 'The modifications to "%s" will not apply correctly to the original file.' % filename
+
+                # Check for reverse patch by seeing if there is "-firstSubstitute" and "+firstOriginal" in the diff.
+                # (If they did everything perfectly and reversed the patch, there will be two lines following these conditions)
+                if patchdata.find('-'+ cls.SUBSTITUTIONS[1][1]) != -1 and patchdata.find('+'+ cls.SUBSTITUTIONS[1][0]) != -1:
+                    raise IncorrectPatch, 'You submitted a patch that would revert the correct changes back to the originals.  You may have mixed the parameters for diff, or performed a reverse patch.'
+                else:
+                    raise IncorrectPatch, 'The modifications to "%s" will not apply correctly to the original file.' % filename
 
             # Check that the resulting file matches what is expected.
             if ''.join(the_patch.patch_stream(StringIO(old_contents), hunks)) != new_contents:
diff --git a/mysite/missions/diffpatch/tests.py b/mysite/missions/diffpatch/tests.py
index 352edaa..8893be3 100644
--- a/mysite/missions/diffpatch/tests.py
+++ b/mysite/missions/diffpatch/tests.py
@@ -228,6 +228,31 @@ class DiffRecursiveTests(TwillTests):
         paulproteus = Person.objects.get(user__username='paulproteus')
         self.assertEqual(len(StepCompletion.objects.filter(step__name='diffpatch_diffrecursive', person=paulproteus)), 0)
 
+    def test_do_mission_incorrectly_revdiff(self):
+        orig_response = self.client.get(reverse(views.diffrecursive_get_original_tarball))
+        tfile = tarfile.open(fileobj=StringIO(orig_response.content), mode='r:gz')
+        diff = StringIO()
+        for fileinfo in tfile:
+            if not fileinfo.isfile():
+                continue
+            oldlines = tfile.extractfile(fileinfo).readlines()
+            newlines = []
+            for line in oldlines:
+                for old, new in controllers.DiffRecursiveMission.SUBSTITUTIONS:
+                    line = line.replace(old, new)
+                newlines.append(line)
+
+            # We're very similar to test_do_mission-correctly, but here we switch newlines and oldlines, to create a reverse patch
+            diff.writelines(difflib.unified_diff(newlines, oldlines, 'orig-'+fileinfo.name, fileinfo.name))
+        diff.seek(0)
+        diff.name = 'foo.patch'
+
+        # Submit, and see if we get the same error message we expect.
+        error = self.client.post(reverse(views.diffrecursive_submit), {'diff': diff})
+        self.assert_('You submitted a patch that would revert the correct changes back to the originals.  You may have mixed the parameters for diff, or performed a reverse patch.' in str(error))
+        paulproteus = Person.objects.get(user__username='paulproteus')
+        self.assertEqual(len(StepCompletion.objects.filter(step__name='diffpatch_diffrecursive', person=paulproteus)), 0)
+
 class PatchRecursiveTests(TwillTests):
     fixtures = ['user-paulproteus', 'person-paulproteus']
 
