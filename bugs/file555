From bda1ccbd9a434424228f66d471492a0dfbc1a7cb Mon Sep 17 00:00:00 2001
From: Aaron Hill <aa1ronham@gmail.com>
Date: Fri, 24 May 2013 15:00:37 -0400
Subject: [PATCH] Resolve issue 858

---
 mysite/search/tests.py        | 18 ++++++++++++++++++
 mysite/search/view_helpers.py | 13 +++++++------
 mysite/search/views.py        |  3 +++
 3 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/mysite/search/tests.py b/mysite/search/tests.py
index e2db99e..bd6a4af 100644
--- a/mysite/search/tests.py
+++ b/mysite/search/tests.py
@@ -209,6 +209,24 @@ class SearchResults(TwillTests):
         for bug in bugs:
             tc.find(bug.description)
 
+    def testPaginationWithAnyFacet(self):
+
+        url = u'http://openhatch.org/search/?q=&language='
+        tc.go(make_twill_url(url))
+
+        bugs = Bug.all_bugs.order_by(u'-last_touched')
+
+        for bug in bugs[:10]:
+            tc.find(bug.description)
+            print "Found bug ", bug
+
+        tc.follow(u'Next')
+
+        bugs = bugs[10:20]
+
+        for bug in bugs:
+            tc.find(bug.description)
+
     def testPaginationAndChangingSearchQuery(self):
 
         url = u'http://openhatch.org/search/'
diff --git a/mysite/search/view_helpers.py b/mysite/search/view_helpers.py
index 9114edb..e4a3bee 100644
--- a/mysite/search/view_helpers.py
+++ b/mysite/search/view_helpers.py
@@ -37,11 +37,11 @@ def order_bugs(query):
 
 class Query:
 
-    def __init__(self, terms=None, active_facet_options=None, any_facet=False, terms_string=None):
+    def __init__(self, terms=None, active_facet_options=None, any_facet_options=False, terms_string=None):
         self.terms = terms or []
         self.active_facet_options = (mysite.base.decorators.no_str_in_the_dict(active_facet_options)
                                      or {})
-        self.any_facet = any_facet
+        self.any_facet_options = any_facet_options or []
         if type(terms_string) == str:
             terms_string = unicode(terms_string, 'utf-8')
         self._terms_string = terms_string
@@ -80,22 +80,23 @@ class Query:
                            u'project']
 
         active_facet_options = {}
-        any_facet = False
+        any_facet_options = []
         for facet in possible_facets:
             if GET.get(facet):
                 active_facet_options[facet] = GET.get(facet)
             elif GET.get(facet) == '': # Only select any_facet if a facet is empty string, not None
-                any_facet = True
+                any_facet_options.append(facet)
         terms_string = GET.get('q', u'')
         terms = Query.split_into_terms(terms_string)
 
-        return Query(terms=terms, active_facet_options=active_facet_options, any_facet=any_facet, terms_string=terms_string)
+        return Query(terms=terms, active_facet_options=active_facet_options,
+                any_facet_options=any_facet_options, terms_string=terms_string)
 
     def get_bugs_unordered(self):
         return mysite.search.models.Bug.open_ones.filter(self.get_Q())
 
     def __nonzero__(self):
-        if self.terms or self.active_facet_options or self.any_facet:
+        if self.terms or self.active_facet_options or self.any_facet_options:
             return 1
         return 0
 
diff --git a/mysite/search/views.py b/mysite/search/views.py
index 05bb951..e962f37 100644
--- a/mysite/search/views.py
+++ b/mysite/search/views.py
@@ -100,6 +100,9 @@ def fetch_bugs(request, invalid_subscribe_to_alert_form=None):
     for facet_name, selected_option in query.active_facet_options.items():
         prev_page_query_str[facet_name] = selected_option
         next_page_query_str[facet_name] = selected_option
+    for facet_name in query.any_facet_options:
+        prev_page_query_str[facet_name] = ''
+        next_page_query_str[facet_name] = ''
     diff = end - start
     prev_page_query_str['start'] = start - diff - 1
     prev_page_query_str['end'] = start - 1
-- 
1.8.1.2

