From 201e8512348c6f2aa347b4f5d7e1b819e8f89aa7 Mon Sep 17 00:00:00 2001
From: Jack Grigg <me@jackgrigg.com>
Date: Thu, 17 Jun 2010 05:43:08 +0000
Subject: [PATCH] Updated the README for clarity and correctness, and added some useful information like how to clear the Django cache.

---
 README.mkd |   56 +++++++++++++++++++++++++++++++++++++++++++++++---------
 1 files changed, 47 insertions(+), 9 deletions(-)

diff --git a/README.mkd b/README.mkd
index 96b7cf9..2825236 100644
--- a/README.mkd
+++ b/README.mkd
@@ -4,21 +4,49 @@ Well, you probably want to know to how run this code.
 
 ## How to run this code ##
 
-    sudo apt-get install python2.6-dev python-apt python-libxml2 memcached # Install some dependencies
-    sudo /etc/init.d/memcached start # start memcached
+### Dependencies ###
+
+OpenHatch is currently designed to run with Python 2.6. Most *decent* Operating Systems come with both Python 2.6 and 3.1 at present, but if you need to then install it.
+
+Next, install some dependencies:
+
+    sudo apt-get install python2.6-dev python-apt python-libxml2 memcached
+
+or the equivalent for your system.
+
+On some Operating Systems you may not need (or be able) to install all of the above packages, depending on what comes prebuilt with Python as default. If you do find a package for any of the above for your system, you should install it.
+
+### Caching ###
+
+Now start memcached. This is used by Django for all the website caching, such as the full list of projects, as well as individual webpage requests.
+
+    sudo /etc/init.d/memcached start
 
 If memcached complains that it is not enabled, configure it by reading `/etc/default/memcached`.
 
+#### Clearing the cache ####
+
+As an aside, the Django cache is held completely in temporary memory by memcached, so clearing the cache is as simple as:
+
+    sudo /etc/init.d/memcached restart
+
 ### Run Buildout ###
 
-OpenHatch uses to Buildout to manage dependencies.
+OpenHatch uses Buildout to manage dependencies.
 
 Run these commands from the top level directory of the repository:
 
     python2.6 bootstrap.py
-    bin/buildout 
+    bin/buildout
+
+### Run the server ###
+
+The following command will start the OpenHatch webserver:
+
     bin/mysite runserver
 
+This server really doesn't like running in the background, so run it in a separate tab or inside a GNU screen session.
+
 ### Set up the database ###
 
 Connect to MySQL. At the risk of stating the obvious, you can use the command `mysql -u root -p`, then type your MySQL root password. Or use `mysql -u username`, where `username` belongs to a MySQL user with the power to run the commands below.
@@ -29,6 +57,12 @@ At the MySQL prompt, enter these commands:
     CREATE USER 'oh_milestone_a'@'localhost' IDENTIFIED BY 'ahmaC0Th';
     GRANT ALL ON oh_milestone_a.* TO 'oh_milestone_a'@'localhost';
 
+In addition, if you wish to run any of the tests, you will need to grant permissions for the temporary database as well:
+
+    GRANT ALL ON test_oh_milestone_a.* TO 'oh_milestone_a'@'localhost';
+
+There is no need to create this database, as creation and destruction is done automatically by the testing suite.
+
 Then exit from MySQL, and run this command, again from the top level directory:
 
     bin/mysite syncdb
@@ -45,7 +79,9 @@ If you have the permission to do so, get the current data and files. Run:
 
     scripts/get_data_and_images
 
-Now load <http://localhost:8000/> in your web browser.
+### Check it all works ###
+
+Now load <http://localhost:8000/> in your web browser. If you see a familiar-looking page then congratulations! You now have your own personal OpenHatch server to hack away at!
 
 If you're having troubles at this point, see "Troubleshooting" below, or post your question to #openhatch on irc.freenode.net.
 
@@ -59,17 +95,19 @@ For non-vimmers, that will delete the string ' = ' when it appears at the beginn
 
 Then remove those trailing square brackets. You may need to replace South's strange, Pythonesque code for dates, with proper MySQL code.
 
-## To make the importer work ##
+## To make the bug importer work ##
+
+At present, there is no inbuilt automation of bug importing (celeryd was causing too many problems). Run the following command to start a bug import:
 
-Run the following command, which will create a Celery daemon:
+    bin/mysite search_daily_tasks
 
-    bin/mysite celeryd -c 8
+Since this can take a while, it is a good idea to run this somewhere where it won't prevent you from using your computer - for example, inside a GNU screen session.
 
 ## Testing ##
 
 As you make changes to the source code, you'll want to run unit tests to make sure that everything is still hunky-dory. To run all tests, except the rather slow tests in the `customs` app, run this command:
 
-    bin/test
+    bin/test_sans_customs
 
 To run the tests in the `customs` app:
 
-- 
1.7.1

