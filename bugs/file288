From ac9bdc4f185427cbc6feac9af639364b6b416c65 Mon Sep 17 00:00:00 2001
From: Paul Bakulich <paulbakulich@gmail.com>
Date: Thu, 26 May 2011 20:42:15 +1200
Subject: [PATCH] Added new step to Git Mission to check  git config --global user.email
 Solves: https://openhatch.org/bugs/issue414
 & https://openhatch.org/bugs/issue413
 & http://openhatch.org/bugs/issue422

---
 mysite/missions/fixtures/initial_data.json         |    4 ++
 mysite/missions/git/forms.py                       |    4 ++
 mysite/missions/git/tests.py                       |   21 ++++++++-
 mysite/missions/git/views.py                       |   31 +++++++++++--
 .../missions/templates/missions/git/about_git.html |   47 +++++++++++++++-----
 mysite/missions/templates/missions/git/base.html   |    2 +-
 .../missions/templates/missions/git/checkout.html  |   15 ++++++-
 .../missions/templates/missions/git/main_page.html |    6 +--
 mysite/urls.py                                     |    1 +
 9 files changed, 106 insertions(+), 25 deletions(-)

diff --git a/mysite/missions/fixtures/initial_data.json b/mysite/missions/fixtures/initial_data.json
index 6e69913..404a504 100644
--- a/mysite/missions/fixtures/initial_data.json
+++ b/mysite/missions/fixtures/initial_data.json
@@ -46,5 +46,9 @@
   {"model": "missions.Step",
    "pk": 12,
    "fields": {"name": "git_rebase"}
+  },
+  {"model": "missions.Step",
+   "pk": 13,
+   "fields": {"name": "git_config"}
   }
 ]
diff --git a/mysite/missions/git/forms.py b/mysite/missions/git/forms.py
index 5f6144f..443707c 100644
--- a/mysite/missions/git/forms.py
+++ b/mysite/missions/git/forms.py
@@ -18,6 +18,10 @@
 
 import django.forms
 
+
+class ConfigForm(django.forms.Form):
+    user_email = django.forms.EmailField()
+
 class CheckoutForm(django.forms.Form):
     secret_word = django.forms.CharField(error_messages={'required': 'No author was given.'})
 
diff --git a/mysite/missions/git/tests.py b/mysite/missions/git/tests.py
index 668eeca..a6af5fe 100644
--- a/mysite/missions/git/tests.py
+++ b/mysite/missions/git/tests.py
@@ -59,13 +59,30 @@ class GitViewTests(TwillTests):
         response = self.client.post(reverse(views.checkout_submit), {'secret_word': word})
         paulproteus = Person.objects.get(user__username='paulproteus')
         self.assert_(controllers.mission_completed(paulproteus, 'git_checkout'))
-        
+       
     def test_do_checkout_mission_incorrectly(self):
         word = 'the wrong word'
         response = self.client.post(reverse(views.checkout_submit), {'secret_word': word})
         paulproteus = Person.objects.get(user__username='paulproteus')
         self.assertFalse(controllers.mission_completed(paulproteus, 'git_checkout'))
         
+    def email_address_is_rejected(self, email_address):
+        response = self.client.post(reverse(views.long_description_submit), {'user_email': email_address})
+	#FIXME: This test isn't passing, not sure why!!
+	self.assertEqual(200, response.status_code)
+
+    def test_do_git_description_mission_incorrectly(self):
+        self.assertFalse(self.email_address_is_rejected('paulproteus@pathi.local'))
+        self.assertFalse(self.email_address_is_rejected('filipovskii_off@Puppo.(none)'))
+        paulproteus = Person.objects.get(user__username='paulproteus')
+        self.assertFalse(controllers.mission_completed(paulproteus, 'git_config'))
+
+    def test_do_git_description_mission_correctly(self):
+        correct_email = 'paulproteus@openhatch.org'
+        response = self.client.post(reverse(views.long_description_submit), {'user_email': correct_email})
+        paulproteus = Person.objects.get(user__username='paulproteus')
+        self.assertTrue(controllers.mission_completed(paulproteus, 'git_config'))
+        
     def test_do_rebase_mission_correctly(self):
         word = 'pinky'
         response = self.client.post(reverse(views.rebase_submit), {'secret_word': word})
@@ -91,4 +108,4 @@ class GitViewTests(TwillTests):
         response = self.client.post(reverse(views.diff_submit), {'diff': unexpected_diff})
         paulproteus = Person.objects.get(user__username='paulproteus')
         self.assertFalse(controllers.mission_completed(paulproteus, 'git_diff'))
-    
\ No newline at end of file
+    
diff --git a/mysite/missions/git/views.py b/mysite/missions/git/views.py
index e1a164c..2ed285a 100644
--- a/mysite/missions/git/views.py
+++ b/mysite/missions/git/views.py
@@ -29,13 +29,14 @@ def resetrepo(request):
     if request.method != 'POST':
         return HttpResponseNotAllowed(['POST'])
     controllers.GitRepository(request.user.username).reset()
+    controllers.unset_mission_completed(request.user.get_profile(), 'git_config')
     controllers.unset_mission_completed(request.user.get_profile(), 'git_checkout')
     controllers.unset_mission_completed(request.user.get_profile(), 'git_diff')
     controllers.unset_mission_completed(request.user.get_profile(), 'git_rebase')
     if 'stay_on_this_page' in request.GET:
         return HttpResponseRedirect(reverse(main_page))
     else:
-        return HttpResponseRedirect(reverse(checkout))
+     return HttpResponseRedirect(reverse(long_description))
 
 @login_required
 def checkout_submit(request):
@@ -55,6 +56,24 @@ def checkout_submit(request):
     return checkout(request, data)
 
 @login_required
+def long_description_submit(request):
+    # Initialize data array and some default values.
+    data = {}
+    data['git_config_form'] = forms.ConfigForm()
+    data['git_config_error_message'] = ''
+    if request.method == 'POST':
+        form = forms.ConfigForm(request.POST)
+        if form.is_valid():
+            gitemail = form.cleaned_data['user_email']
+            if ('.local' not in gitemail or '(none)' not in gitemail or 'localhost' not in gitemail):
+                controllers.set_mission_completed(request.user.get_profile(), 'git_config')
+                return HttpResponseRedirect(reverse(long_description))
+            else:
+                data['git_config_error_message'] = "The email address is invalid!"
+    	data['git_config_form'] = form
+    return long_description(request, data)
+
+@login_required
 def diff_submit(request):
     # Initialize data array and some default values.
     data = {}
@@ -99,6 +118,7 @@ class GitMissionPageState(MissionPageState):
             repo = controllers.GitRepository(self.request.user.username)
             data.update({
                 'repository_exists': repo.exists(),
+                'git_config_done': controllers.mission_completed(person, 'git_config'),
                 'git_checkout_done': controllers.mission_completed(person, 'git_checkout'),
                 'git_diff_done': controllers.mission_completed(person, 'git_diff'),
                 'git_rebase_done': controllers.mission_completed(person, 'git_rebase'),
@@ -120,18 +140,21 @@ def main_page(request, passed_data = None):
     return (request, 'missions/git/main_page.html',
             state.as_dict_for_template_context())
 
+@login_required
 @view
 def long_description(request, passed_data = None):
     state = GitMissionPageState(request, passed_data)
-    state.this_mission_page_short_name = 'About Git'
-    return (request, 'missions/git/about_git.html',
-            state.as_dict_for_template_context())
+    state.this_mission_page_short_name = 'Setup Git'
+    data = state.as_dict_for_template_context()
+    data['git_config_form'] = forms.ConfigForm()
+    return (request, 'missions/git/about_git.html', data)
 
 @login_required
 @view
 def checkout(request, passed_data = None):
     state = GitMissionPageState(request, passed_data)
     state.this_mission_page_short_name = 'Cloning'
+    state.mission_step_prerequisite = 'git_config'
     data = state.as_dict_for_template_context()
     data['git_checkout_form'] = forms.CheckoutForm()
     return (request, 'missions/git/checkout.html', data)
diff --git a/mysite/missions/templates/missions/git/about_git.html b/mysite/missions/templates/missions/git/about_git.html
index b9116f0..75ec704 100644
--- a/mysite/missions/templates/missions/git/about_git.html
+++ b/mysite/missions/templates/missions/git/about_git.html
@@ -22,25 +22,48 @@
 
 <p>Git is a version control system (VCS) created by Linus Torvalds,  the creator of the Linux kernel. Git is known as a 'distributed” VCS, or DVCS. This means that each user's copy of the code is a fully working repository and includes all previous commit information.  Rather than connecting to a remote server as you would with Subversion or CVS, users can work productively offline, choosing to later sync their changes with a remote repository or create a patch file.</p>
 
+<h3>Other resources</h3>
+
+<ul class="raquo_bullets">
+  <li>The <a href="http://git-scm.com/">website</a> for the git project contains a quickstart guide and links to <a href="http://git-scm.com/documentation"> other useful resources</a>.</li>
+  <li>The <a href="http://book.git-scm.com/"> Git Community Book</a> is a wonderful resource for more in depth explanation of git's features.</li>
+  <li>Many git users chat on the #git channel on IRC</li>
+</ul>
+
 <p>The purpose of this mission is to teach you how to clone a remote repository, make changes to a file, check them into your local copy, and finally create a patch file.</p>
 
+
 <h3>Preparing for the mission</h3>
 <ul class="raquo_bullets">
   <li>Install git onto your machine.  In linux, the package is typically named "git-core" and is likely available via your package manager.  The <a href="http://git-scm.com/download">git website</a> contains options for downloading the latest version and builds for other platforms.</li>
-  <li>Configure your user name: git config –global user.name 'First Last'</li>
-  <li>Configure your user email: git config –global user.email 'name@domain.com'</li>
+  <li>Configure your user name: git config --global user.name 'First Last'</li>
+  <li>Configure your user email: git config --global user.email 'name@domain.com'</li>
 </ul>
 
 {% if user.is_authenticated %}
-<p>(If your project recommends this tutorial to newcomers, we can put you in a list here!)</p>
-{% endif %}
-<p>
-<h3>Other resources</h3>
+	{% if git_config_done %}
+	<div class="successmsg">
+	  <p><strong>You have successfully completed the first part of the mission.</strong></p>
+	</div>
+	<p class="next_mission_link">
+	  <a href="{% url mysite.missions.git.views.checkout %}">Checking out a
+	  working copy &raquo;</a></p>
+	{% else %}
+	<form method="post" action="{% url mysite.missions.git.views.long_description_submit %}#gitconfig-form">
+	  <div class="form-row">
+	    <a name="gitconfig-form"></a>
+	    <br style="clear: left;" />
+		{% if git_config_error_message or git_config_form.user_email.errors %}
+			<ul class="errorlist"><li>{{ git_config_form.user_email.errors }}  {{ git_config_error_message }}</li></ul><br style="clear: left;" />
+		{% endif %}
+	    To confirm that you have setup git correctly paste the output from..<br />
+	    <code>git config --global user.email</code><br style="clear: left;" /><br />
+	    {{ git_config_form.user_email }}
+	    <br style="clear: left;" />
+	    <input type="submit" value="Submit" style="float: right; margin-top: -20px; margin-right: 200px;" />
+	  </div>
+	</form>
+	{% endif %}
+{% endif %} 
 
-<ul class="raquo_bullets">
-  <li>The <a href="http://git-scm.com/">website</a> for the git project contains a quickstart guide and links to <a href="http://git-scm.com/documentation"> other useful resources</a>.</li>
-  <li>The <a href="http://book.git-scm.com/"> Git Community Book</a> is a wonderful resource for more in depth explanation of git's features.</li>
-  <li>Many git users chat on the #git channel on IRC</li>
-</ul>
-</p>
 {% endblock mission_main_body %}
diff --git a/mysite/missions/templates/missions/git/base.html b/mysite/missions/templates/missions/git/base.html
index 5662b40..0b9f60b 100644
--- a/mysite/missions/templates/missions/git/base.html
+++ b/mysite/missions/templates/missions/git/base.html
@@ -27,7 +27,7 @@
 </li>
 <li id='link-long_description'>
   <a href='{% url mysite.missions.git.views.long_description %}'>
-    About Git
+    Setup Git
   </a>
 </li>
 <li id='link-checkout'>
diff --git a/mysite/missions/templates/missions/git/checkout.html b/mysite/missions/templates/missions/git/checkout.html
index 1b37001..273265d 100644
--- a/mysite/missions/templates/missions/git/checkout.html
+++ b/mysite/missions/templates/missions/git/checkout.html
@@ -21,6 +21,17 @@
 
 {% block mission_main_body %}
 
+{% if not repository_exists %}
+
+{% block mission_missing_prerequisite_text %}
+<p>You can't do the git checkout step yet! <br />
+You have to create your repository on the
+  <a href='{% url mysite.missions.git.views.main_page %}'>Mission start page</a>!
+</p>
+{% endblock mission_missing_prerequisite_text %}
+
+{% else %}
+
 <p>Your first mission is to obtain a copy of the remote git repository. For this mission, we will use the git repository you created in step one.  Running the following command will clone the remote repository and create a copy on your hard drive.</p>
 
 <p>You can clone the repository by running:<br style="clear: left;" />
@@ -35,7 +46,7 @@
 <p class="next_mission_link">
   <a href="{% url mysite.missions.git.views.diff %}">Creating a patch of your changes &raquo;</a></p>
 {% else %}
-<form method="post" action="{% url mysite.missions.git.views.checkout_submit %}#gitcheckout-form">
+<form method="post" action="{% url mysite.missions.git.views.checkout_submit %}">
   <div class="form-row">
     <a name="gitcheckout-form"></a>
     {% if git_checkout_error_message %}
@@ -51,5 +62,7 @@
 </form>
 
 {% endif %}
+{% endif %}
+
 
 {% endblock mission_main_body %}
diff --git a/mysite/missions/templates/missions/git/main_page.html b/mysite/missions/templates/missions/git/main_page.html
index fcdef90..7c61d4b 100644
--- a/mysite/missions/templates/missions/git/main_page.html
+++ b/mysite/missions/templates/missions/git/main_page.html
@@ -35,9 +35,6 @@ text file and use a terminal, you can complete this mission. </p>
 <p>You will learn how to clone a git repository, make a commit, submit a patch,
 and rebase your work onto the new version provided by the maintainer.</p>
 
-<p>If you want to know more about git, read 
-<a href="{% url mysite.missions.git.views.long_description %}">more about Git</a>.</p>
-
 {% if user.is_authenticated %}
 {% if repository_exists %}
 <p>You already have a repository that you can use for these missions, but if
@@ -48,8 +45,7 @@ you want to start over fresh, you can reset it.</p>
 </form><br style="clear: left;" />
 
 <p class="next_mission_link">
-  <a href="{% url mysite.missions.git.views.checkout %}">Checking out a
-  working copy &raquo;</a></p>
+    <a href="{% url mysite.missions.git.views.long_description %}">Now let's get Git setup &raquo;</a>.</p>
   {% else %}
   <p>To do these missions, you will need to make a personal repository.  Your
   repository will reside on the OpenHatch server, specifically for your use in
diff --git a/mysite/urls.py b/mysite/urls.py
index d291e1f..d188e82 100644
--- a/mysite/urls.py
+++ b/mysite/urls.py
@@ -134,6 +134,7 @@ urlpatterns = patterns('',
 
         (r'^missions/git$', 'mysite.missions.git.views.main_page'),
         (r'^missions/git/description$', 'mysite.missions.git.views.long_description'),
+        (r'^missions/git/description/submit$', 'mysite.missions.git.views.long_description_submit'),
         (r'^missions/git/checkout$', 'mysite.missions.git.views.checkout'),
         (r'^missions/git/resetrepo$', 'mysite.missions.git.views.resetrepo'),
         (r'^missions/git/checkout/submit$', 'mysite.missions.git.views.checkout_submit'),
-- 
1.7.4.1

