From a35a7617c45c340d87679e21d4bb8df916561085 Mon Sep 17 00:00:00 2001
From: Mark Freeman <mark@timewasted.net>
Date: Sat, 21 May 2011 08:14:13 -0500
Subject: [PATCH] Initial commit of changes to profile module to add a field for irc nick. Buck tracker issue 163.

---
 mysite/profile/forms.py                            |    1 +
 .../0089_auto__add_field_person_irc_nick.py        |  217 ++++++++++++++++++++
 mysite/profile/models.py                           |    4 +-
 mysite/profile/templates/profile/base_profile.html |    7 +
 mysite/profile/templates/profile/info_wrapper.html |    7 +
 mysite/profile/tests.py                            |   26 +++
 mysite/profile/views.py                            |    4 +
 7 files changed, 265 insertions(+), 1 deletions(-)
 create mode 100644 mysite/profile/migrations/0089_auto__add_field_person_irc_nick.py

diff --git a/mysite/profile/forms.py b/mysite/profile/forms.py
index 3c70eaa..7c91605 100644
--- a/mysite/profile/forms.py
+++ b/mysite/profile/forms.py
@@ -54,6 +54,7 @@ class ManuallyAddACitationForm(django.forms.ModelForm):
 class EditInfoForm(django.forms.Form):
     bio = django.forms.CharField(required=False, widget=django.forms.Textarea())
     homepage_url = django.forms.URLField(required=False)
+    irc_nick = django.forms.CharField(required=False, widget=django.forms.TextInput())
     understands = django.forms.CharField(required=False, widget=django.forms.Textarea())
     understands_not = django.forms.CharField(required=False, widget=django.forms.Textarea())
     studying = django.forms.CharField(required=False, widget=django.forms.Textarea())
diff --git a/mysite/profile/migrations/0089_auto__add_field_person_irc_nick.py b/mysite/profile/migrations/0089_auto__add_field_person_irc_nick.py
new file mode 100644
index 0000000..bc8ba67
--- /dev/null
+++ b/mysite/profile/migrations/0089_auto__add_field_person_irc_nick.py
@@ -0,0 +1,217 @@
+# encoding: utf-8
+import datetime
+from south.db import db
+from south.v2 import SchemaMigration
+from django.db import models
+
+class Migration(SchemaMigration):
+
+    def forwards(self, orm):
+        
+        # Adding field 'Person.irc_nick'
+        db.add_column('profile_person', 'irc_nick', self.gf('django.db.models.fields.CharField')(max_length=30, null=True, blank=True), keep_default=False)
+
+
+    def backwards(self, orm):
+        
+        # Deleting field 'Person.irc_nick'
+        db.delete_column('profile_person', 'irc_nick')
+
+
+    models = {
+        'auth.group': {
+            'Meta': {'object_name': 'Group'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '80'}),
+            'permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'})
+        },
+        'auth.permission': {
+            'Meta': {'ordering': "('content_type__app_label', 'content_type__model', 'codename')", 'unique_together': "(('content_type', 'codename'),)", 'object_name': 'Permission'},
+            'codename': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
+            'content_type': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['contenttypes.ContentType']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'name': ('django.db.models.fields.CharField', [], {'max_length': '50'})
+        },
+        'auth.user': {
+            'Meta': {'object_name': 'User'},
+            'date_joined': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
+            'email': ('django.db.models.fields.EmailField', [], {'max_length': '75', 'blank': 'True'}),
+            'first_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
+            'groups': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Group']", 'symmetrical': 'False', 'blank': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'is_active': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
+            'is_staff': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'is_superuser': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'last_login': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now'}),
+            'last_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
+            'password': ('django.db.models.fields.CharField', [], {'max_length': '128'}),
+            'user_permissions': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['auth.Permission']", 'symmetrical': 'False', 'blank': 'True'}),
+            'username': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '30'})
+        },
+        'contenttypes.contenttype': {
+            'Meta': {'ordering': "('name',)", 'unique_together': "(('app_label', 'model'),)", 'object_name': 'ContentType', 'db_table': "'django_content_type'"},
+            'app_label': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'model': ('django.db.models.fields.CharField', [], {'max_length': '100'}),
+            'name': ('django.db.models.fields.CharField', [], {'max_length': '100'})
+        },
+        'customs.webresponse': {
+            'Meta': {'object_name': 'WebResponse'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'response_headers': ('django.db.models.fields.TextField', [], {}),
+            'status': ('django.db.models.fields.IntegerField', [], {}),
+            'text': ('django.db.models.fields.TextField', [], {}),
+            'url': ('django.db.models.fields.TextField', [], {})
+        },
+        'profile.citation': {
+            'Meta': {'object_name': 'Citation'},
+            'contributor_role': ('django.db.models.fields.CharField', [], {'max_length': '200', 'null': 'True'}),
+            'data_import_attempt': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.DataImportAttempt']", 'null': 'True'}),
+            'date_created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.utcnow'}),
+            'distinct_months': ('django.db.models.fields.IntegerField', [], {'null': 'True'}),
+            'first_commit_time': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'ignored_due_to_duplicate': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'is_deleted': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'is_published': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'languages': ('django.db.models.fields.CharField', [], {'max_length': '200', 'null': 'True'}),
+            'old_summary': ('django.db.models.fields.TextField', [], {'default': 'None', 'null': 'True'}),
+            'portfolio_entry': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.PortfolioEntry']"}),
+            'url': ('django.db.models.fields.URLField', [], {'max_length': '200', 'null': 'True'})
+        },
+        'profile.dataimportattempt': {
+            'Meta': {'object_name': 'DataImportAttempt'},
+            'completed': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'date_created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.utcnow'}),
+            'failed': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'person': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.Person']"}),
+            'query': ('django.db.models.fields.CharField', [], {'max_length': '200'}),
+            'source': ('django.db.models.fields.CharField', [], {'max_length': '2'}),
+            'web_response': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['customs.WebResponse']", 'null': 'True'})
+        },
+        'profile.forwarder': {
+            'Meta': {'object_name': 'Forwarder'},
+            'address': ('django.db.models.fields.TextField', [], {}),
+            'expires_on': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(1970, 1, 1, 0, 0)'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'stops_being_listed_on': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(1970, 1, 1, 0, 0)'}),
+            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['auth.User']"})
+        },
+        'profile.link_person_tag': {
+            'Meta': {'object_name': 'Link_Person_Tag'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'person': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.Person']"}),
+            'source': ('django.db.models.fields.CharField', [], {'max_length': '200'}),
+            'tag': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.Tag']"})
+        },
+        'profile.link_project_tag': {
+            'Meta': {'object_name': 'Link_Project_Tag'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['search.Project']"}),
+            'source': ('django.db.models.fields.CharField', [], {'max_length': '200'}),
+            'tag': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.Tag']"})
+        },
+        'profile.link_sf_proj_dude_fm': {
+            'Meta': {'unique_together': "[('person', 'project')]", 'object_name': 'Link_SF_Proj_Dude_FM'},
+            'date_collected': ('django.db.models.fields.DateTimeField', [], {}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'is_admin': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'person': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.SourceForgePerson']"}),
+            'position': ('django.db.models.fields.CharField', [], {'max_length': '200'}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.SourceForgeProject']"})
+        },
+        'profile.person': {
+            'Meta': {'object_name': 'Person'},
+            'bio': ('django.db.models.fields.TextField', [], {'blank': 'True'}),
+            'blacklisted_repository_committers': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['profile.RepositoryCommitter']", 'symmetrical': 'False'}),
+            'contact_blurb': ('django.db.models.fields.TextField', [], {'blank': 'True'}),
+            'dont_guess_my_location': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'email_me_weekly_re_projects': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
+            'expand_next_steps': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
+            'gotten_name_from_ohloh': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'homepage_url': ('django.db.models.fields.URLField', [], {'default': "''", 'max_length': '200', 'blank': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'irc_nick': ('django.db.models.fields.CharField', [], {'max_length': '30', 'null': 'True', 'blank': 'True'}),
+            'last_polled': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime(1970, 1, 1, 0, 0)'}),
+            'location_confirmed': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'location_display_name': ('django.db.models.fields.CharField', [], {'max_length': '255', 'blank': 'True'}),
+            'photo': ('django.db.models.fields.files.ImageField', [], {'default': "''", 'max_length': '100'}),
+            'photo_thumbnail': ('django.db.models.fields.files.ImageField', [], {'default': "''", 'max_length': '100', 'null': 'True'}),
+            'photo_thumbnail_20px_wide': ('django.db.models.fields.files.ImageField', [], {'default': "''", 'max_length': '100', 'null': 'True'}),
+            'photo_thumbnail_30px_wide': ('django.db.models.fields.files.ImageField', [], {'default': "''", 'max_length': '100', 'null': 'True'}),
+            'show_email': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'user': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['auth.User']", 'unique': 'True'})
+        },
+        'profile.portfolioentry': {
+            'Meta': {'ordering': "('-sort_order', '-id')", 'object_name': 'PortfolioEntry'},
+            'date_created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.utcnow'}),
+            'experience_description': ('django.db.models.fields.TextField', [], {'blank': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'is_archived': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'is_deleted': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'is_published': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'person': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.Person']"}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['search.Project']"}),
+            'project_description': ('django.db.models.fields.TextField', [], {'blank': 'True'}),
+            'receive_maintainer_updates': ('django.db.models.fields.BooleanField', [], {'default': 'True'}),
+            'sort_order': ('django.db.models.fields.IntegerField', [], {'default': '0'}),
+            'use_my_description': ('django.db.models.fields.BooleanField', [], {'default': 'True'})
+        },
+        'profile.repositorycommitter': {
+            'Meta': {'unique_together': "(('project', 'data_import_attempt'),)", 'object_name': 'RepositoryCommitter'},
+            'data_import_attempt': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.DataImportAttempt']"}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'project': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['search.Project']"})
+        },
+        'profile.sourceforgeperson': {
+            'Meta': {'object_name': 'SourceForgePerson'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'username': ('django.db.models.fields.CharField', [], {'max_length': '200'})
+        },
+        'profile.sourceforgeproject': {
+            'Meta': {'object_name': 'SourceForgeProject'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'unixname': ('django.db.models.fields.CharField', [], {'max_length': '200'})
+        },
+        'profile.tag': {
+            'Meta': {'object_name': 'Tag'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'tag_type': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.TagType']"}),
+            'text': ('django.db.models.fields.CharField', [], {'max_length': '255'})
+        },
+        'profile.tagtype': {
+            'Meta': {'object_name': 'TagType'},
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'name': ('django.db.models.fields.CharField', [], {'max_length': '100'})
+        },
+        'profile.unsubscribetoken': {
+            'Meta': {'object_name': 'UnsubscribeToken'},
+            'created_date': ('django.db.models.fields.DateTimeField', [], {'auto_now_add': 'True', 'null': 'True', 'blank': 'True'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'modified_date': ('django.db.models.fields.DateTimeField', [], {'auto_now': 'True', 'blank': 'True'}),
+            'owner': ('django.db.models.fields.related.ForeignKey', [], {'to': "orm['profile.Person']"}),
+            'string': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '255'})
+        },
+        'search.project': {
+            'Meta': {'object_name': 'Project'},
+            'cached_contributor_count': ('django.db.models.fields.IntegerField', [], {'default': '0', 'null': 'True'}),
+            'created_date': ('django.db.models.fields.DateTimeField', [], {'auto_now_add': 'True', 'null': 'True', 'blank': 'True'}),
+            'date_icon_was_fetched_from_ohloh': ('django.db.models.fields.DateTimeField', [], {'default': 'None', 'null': 'True'}),
+            'display_name': ('django.db.models.fields.CharField', [], {'default': "''", 'max_length': '200'}),
+            'homepage': ('django.db.models.fields.URLField', [], {'default': "''", 'max_length': '200', 'blank': 'True'}),
+            'icon_for_profile': ('django.db.models.fields.files.ImageField', [], {'default': 'None', 'max_length': '100', 'null': 'True'}),
+            'icon_for_search_result': ('django.db.models.fields.files.ImageField', [], {'default': 'None', 'max_length': '100', 'null': 'True'}),
+            'icon_raw': ('django.db.models.fields.files.ImageField', [], {'default': 'None', 'max_length': '100', 'null': 'True', 'blank': 'True'}),
+            'icon_smaller_for_badge': ('django.db.models.fields.files.ImageField', [], {'default': 'None', 'max_length': '100', 'null': 'True'}),
+            'icon_url': ('django.db.models.fields.URLField', [], {'max_length': '200'}),
+            'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
+            'language': ('django.db.models.fields.CharField', [], {'default': "''", 'max_length': '200', 'blank': 'True'}),
+            'logo_contains_name': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
+            'modified_date': ('django.db.models.fields.DateTimeField', [], {'auto_now': 'True', 'blank': 'True'}),
+            'name': ('django.db.models.fields.CharField', [], {'unique': 'True', 'max_length': '200'}),
+            'people_who_wanna_help': ('django.db.models.fields.related.ManyToManyField', [], {'related_name': "'projects_i_wanna_help'", 'symmetrical': 'False', 'to': "orm['profile.Person']"})
+        }
+    }
+
+    complete_apps = ['profile']
diff --git a/mysite/profile/models.py b/mysite/profile/models.py
index f06c6d4..fd47dae 100644
--- a/mysite/profile/models.py
+++ b/mysite/profile/models.py
@@ -123,7 +123,9 @@ class Person(models.Model):
                                              verbose_name='Location')
     email_me_weekly_re_projects = models.BooleanField( default=True,
             verbose_name='Email me weekly about activity in my projects')
-
+    
+    irc_nick = models.CharField(max_length=30, blank=True, null=True);
+    
     @staticmethod
     def create_dummy(first_name="", email=None, **kwargs):
 
diff --git a/mysite/profile/templates/profile/base_profile.html b/mysite/profile/templates/profile/base_profile.html
index 60aed58..7e81948 100644
--- a/mysite/profile/templates/profile/base_profile.html
+++ b/mysite/profile/templates/profile/base_profile.html
@@ -176,6 +176,13 @@
         </p>
         {% endif %}
 
+        {% if person.irc_nick %}
+        <h4>irc nick</h4>
+        <p id="ircnick" style='clear: both;'>
+            {{person.irc_nick}}
+        </p>
+        {% endif %}
+
         {% comment %} 
         <div class="tags" id="tags-links"
             <span class="tag-type">links:</span>
diff --git a/mysite/profile/templates/profile/info_wrapper.html b/mysite/profile/templates/profile/info_wrapper.html
index 0e96b39..fc43d05 100644
--- a/mysite/profile/templates/profile/info_wrapper.html
+++ b/mysite/profile/templates/profile/info_wrapper.html
@@ -70,6 +70,13 @@
                         </div>
 
                         <div class='form-row'>
+                            <label>IRC nick:</label>
+                            {{ form.irc_nick.errors }}
+                            {{ form.irc_nick }}
+                            <p class='example'>Example: sufjan</p>
+                        </div>
+
+                        <div class='form-row'>
                             <h3 style='float: left; width: 95%; margin-bottom: 3px;'>Tag yourself</h3>
                             <p class='why'>After you save, these tags will appear on your profile. Click them to find similar people. {# In the near future, this information will help people find you in the <a href='/people/'>People Search</a>.#} </p>
                         </div>
diff --git a/mysite/profile/tests.py b/mysite/profile/tests.py
index 4764b43..9f3af87 100644
--- a/mysite/profile/tests.py
+++ b/mysite/profile/tests.py
@@ -1408,6 +1408,32 @@ class EditHomepage(TwillTests):
         tc.go(make_twill_url('http://openhatch.org/people/paulproteus/'))
         tc.notfind('htttp')
 
+class EditIrcNick(TwillTests):
+    fixtures = ['user-paulproteus', 'person-paulproteus']
+
+    def test(self):
+        '''
+        * Goes to paulproteus's profile
+        * checks that they don't already have a ircnick that says "paulproteusnick"
+        * clicks edit on the Info area
+        * enters a string as irc nick
+        * checks that his irc nick now contains string
+        '''
+        self.login_with_twill()
+        tc.go(make_twill_url('http://openhatch.org/people/paulproteus/'))
+        tc.notfind('paulproteusnick')
+        tc.go(make_twill_url('http://openhatch.org/profile/views/edit_info'))
+        #make sure our irc nick is not already on the form
+        tc.notfind('paulproteusnick')
+        # set the irc nick in the form
+        tc.fv("edit-tags", 'edit-tags-irc_nick', 'paulproteusnick')
+        tc.submit()
+        #find the string we just submitted as our irc nick
+        tc.find('paulproteusnick')
+        self.assertEqual(Person.get_by_username('paulproteus').irc_nick, "paulproteusnick")
+        #now we should see our irc nick in the edit form
+        tc.go(make_twill_url('http://openhatch.org/profile/views/edit_info'))
+        tc.find('paulproteusnick')
 
 class EditContactBlurbForwarderification(TwillTests):
     fixtures = ['user-paulproteus', 'person-paulproteus']
diff --git a/mysite/profile/views.py b/mysite/profile/views.py
index dc617b6..02fcc5c 100644
--- a/mysite/profile/views.py
+++ b/mysite/profile/views.py
@@ -275,6 +275,9 @@ def edit_person_info_do(request):
 
     #grab their submitted bio
     person.bio = edit_info_form['bio'].data
+    
+    #grab the irc nick
+    person.irc_nick = edit_info_form['irc_nick'].data
 
     # We can map from some strings to some TagTypes
     for known_tag_type_name in ('understands', 'understands_not',
@@ -1125,6 +1128,7 @@ def edit_info(request, contact_blurb_error=False, edit_info_form=None, contact_b
         edit_info_form = mysite.profile.forms.EditInfoForm(initial={
           'bio': person.bio,
           'homepage_url': person.homepage_url,
+          'irc_nick': person.irc_nick,
           'understands': data['tags_flat'].get('understands', ''),
           'understands_not': data['tags_flat'].get('understands_not', ''),
           'studying': data['tags_flat'].get('studying', ''),
-- 
1.7.2.5

