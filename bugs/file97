From 6fd927045690e160d195e5ccd4fd5d50870ede03 Mon Sep 17 00:00:00 2001
From: Jessica McKellar <jesstess@mit.edu>
Date: Mon, 22 Nov 2010 21:04:28 -0500
Subject: [PATCH] Check for a backwards diff submission for the diffsingle mission.

Report a custom failure message to the user, and exercise this
special case in the diffsingle unit tests.
---
 mysite/missions/diffpatch/controllers.py |    6 ++++++
 mysite/missions/diffpatch/tests.py       |   27 +++++++++++++++++++++++++++
 2 files changed, 33 insertions(+), 0 deletions(-)

diff --git a/mysite/missions/diffpatch/controllers.py b/mysite/missions/diffpatch/controllers.py
index 38733b8..7a69cca 100644
--- a/mysite/missions/diffpatch/controllers.py
+++ b/mysite/missions/diffpatch/controllers.py
@@ -14,6 +14,12 @@ class SingleFilePatch(object):
         if len(the_patch.hunks) != 1:
             raise IncorrectPatch, 'The patch affects more than one file.'
 
+        # Check if the diff is in the wrong order.
+        if ''.join(the_patch.patch_stream(open(cls.NEW_FILE), the_patch.hunks[0])) == open(cls.OLD_FILE).read():
+            raise IncorrectPatch, 'It looks like the order of files passed to diff was flipped. \
+        To generate a diff representing the changes you made to originalfile.txt \
+        to get to modifiedfile.txt, do "diff -u originalfile.txt modifiedfile.txt".'
+
         # Check that it will apply correctly to the file.
         if not the_patch._match_file_hunks(cls.OLD_FILE, the_patch.hunks[0]):
             raise IncorrectPatch, 'The patch will not apply correctly to the original file.'
diff --git a/mysite/missions/diffpatch/tests.py b/mysite/missions/diffpatch/tests.py
index f2634c8..c0d2637 100644
--- a/mysite/missions/diffpatch/tests.py
+++ b/mysite/missions/diffpatch/tests.py
@@ -92,6 +92,7 @@ class DiffSingleFileTests(TwillTests):
         return ''.join(difflib.unified_diff(oldlines, newlines, 'old.txt', 'new.txt'))
 
     def make_swapped_patch(self):
+        # make a backwards diff.
         oldlines = open(controllers.DiffSingleFileMission.OLD_FILE).readlines()
         newlines = open(controllers.DiffSingleFileMission.NEW_FILE).readlines()
         return ''.join(difflib.unified_diff(newlines, oldlines, 'new.txt', 'old.txt'))
@@ -123,6 +124,17 @@ class DiffSingleFileTests(TwillTests):
         else:
             self.fail('no exception raised')
 
+    def test_backwards_diff(self):
+        """
+        A backwards diff generates a special IncorrectPatch exception.
+        """
+        try:
+            controllers.DiffSingleFileMission.validate_patch(self.make_swapped_patch())
+        except controllers.IncorrectPatch, e:
+            self.assert_('order of files passed to diff was flipped' in str(e))
+        else:
+            self.fail('no exception raised')
+
     def test_do_mission_correctly(self):
         orig_response = self.client.get(reverse(views.diffsingle_get_original_file))
         orig_lines = StringIO(orig_response.content).readlines()
@@ -137,7 +149,22 @@ class DiffSingleFileTests(TwillTests):
         self.assertEqual(len(StepCompletion.objects.filter(step__name='diffpatch_diffsingle', person=paulproteus)), 1)
 
     def test_do_mission_incorrectly(self):
+        """
+        Submitting a generically incorrect diff generates a generic failure message.
+        """
+        submit_response = self.client.post(reverse(views.diffsingle_submit), {'diff': self.make_wrong_dest_patch()})
+        self.assert_('does not have the correct contents' in submit_response.content)
+        self.assertFalse(submit_response.context['diffsingle_success'])
+
+        paulproteus = Person.objects.get(user__username='paulproteus')
+        self.assertEqual(len(StepCompletion.objects.filter(step__name='diffpatch_diffsingle', person=paulproteus)), 0)
+
+    def test_do_mission_backwards_diff(self):
+        """
+        Submitting a backwards diff generates a special failure message.
+        """
         submit_response = self.client.post(reverse(views.diffsingle_submit), {'diff': self.make_swapped_patch()})
+        self.assert_('order of files passed to diff was flipped' in submit_response.content)
         self.assertFalse(submit_response.context['diffsingle_success'])
 
         paulproteus = Person.objects.get(user__username='paulproteus')
-- 
1.7.1

