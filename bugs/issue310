<!-- dollarId: issue.item,v 1.4 2001/08/03 01:19:43 richard Exp dollar-->
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
<title>
Issue 310: Remove our HitCountCache django model, and use Django's caching framework instead - Roundup issue tracker

</title>
<link rel="stylesheet" type="text/css" href="@@file/style.css">
<meta http-equiv="Content-Type"
      content="text/html; charset=utf-8" />

<script type="text/javascript">
submitted = false;
function submit_once() {
    if (submitted) {
        alert("Your request is being processed.\nPlease be patient.");
        event.returnValue = 0;    // work-around for IE
        return 0;
    }
    submitted = true;
    return 1;
}

function help_window(helpurl, width, height) {
    HelpWin = window.open('https://openhatch.org/bugs/' + helpurl, 'RoundupHelpWindow', 'scrollbars=yes,resizable=yes,toolbar=no,height='+height+',width='+width);
}
</script>



</head>
<body class="body">

<table class="body">

<tr>
 <td class="page-header-left"><a href="/" title="OpenHatch"><img src="/static/images/the-logo-bluegreen-87px.png" width="87" height="60" alt="openhatch" /></a></td>
 <td class="page-header-top">
   <div id="body-title">
     <h2>
 
 
 Issue310
 
</h2>
   </div>
   <div id="searchbox">
     <form method="GET" action="issue">
       <input type="hidden" name="@columns"
              value="id,activity,title,creator,assignedto,status,milestone" />
       <input type="hidden" name="@sort" value="activity" />
       <input type="hidden" name="@group" value="priority" />
       <input id="search-text" name="@search_text" size="10" />
       <input type="submit" id="submit" name="submit"
              value="Search" />
     </form>
  </div>
 </td>
</tr>

<tr>
 <td rowspan="2" valign="top" class="sidebar">
  

  <p class="classblock">
    <b>This month: 0.13.10</b><br>
    <a href="/wiki/0.13.10">Goals (in wiki)</a><br>
    <a href="milestone19?@template=open">Bug list</a>
  </p>

  <form method="POST" action="https://openhatch.org/bugs/">
   <p class="classblock">
    <b>Issues</b><br>
    
    <a href="issue?status=-1,1,2,3,4,5,6,7,9,10&amp;@sort=-activity&amp;@search_text=&amp;@columns=id,activity,title,creator,status,milestone&amp;assignedto=-1&amp;@group=priority&amp;@dispname=Show Unassigned&amp;@filter=status,assignedto&amp;@pagesize=50&amp;@startwith=0">Show Unassigned</a><br>
    <a href="issue?status=-1,1,2,3,4,5,6,7,9,10&amp;@sort=-activity&amp;@search_text=&amp;@dispname=Show All&amp;@filter=status&amp;@group=priority&amp;@columns=id,activity,title,creator,assignedto,status,milestone&amp;@pagesize=50&amp;@startwith=0">Show All</a><br>
    <a href="issue?status=-1,1,2,3,4,5,6,7,9,10&amp;@sort=-activity&amp;@search_text=&amp;@columns=id,activity,title,creator,assignedto,status,milestone&amp;@dispname=Show Bitesized&amp;keyword=1&amp;@group=priority&amp;@filter=status,keyword&amp;@pagesize=50&amp;@startwith=0">Show Bitesized</a><br>
    <a href="issue?@template=search">Search</a><br>
    <input type="submit" class="form-small"
           value="Show issue:"><input class="form-small" size="4" type="text" name="@number">
    <input type="hidden" name="@type" value="issue">
    <input type="hidden" name="@action" value="show">
   </p>
  </form>

  

  

  

   <p class="userblock">
    <b>Login</b><br>
    <a href="https://openhatch.org/account/login/?next=/bugs/issue310">Click here to login.</a>
   </p>

  
  <p class="userblock">
   <b>Help</b><br>
   <a href="http://www.roundup-tracker.org/docs.html">Bug tracker docs</a>
  </p>
 </td>
 <td>
  
  
 </td>
</tr>
<tr>
 <td class="content">





<div>

<form method="POST" name="itemSynopsis"
      onsubmit="return submit_once()"
      enctype="multipart/form-data" action="issue310">

<table class="form">
<tr>
 <th class="required">Title</th>
 <td colspan="3">Remove our HitCountCache django model, and use Django's caching framework instead</td>
</tr>

<tr>
 <th>Milestone</th>
 <td>0.11.06</td>
 <th class="required">Priority</th>
 <td>urgent</td>
</tr>

<tr>
 <th>Waiting On</th>
 <td>
  
  
  
 </td>
 <th>Status</th>
 <td>resolved</td>
</tr>

<tr>
 <th>Superseder</th>
 <td>
  
  
  
 </td>
 <th>Nosy List</th>
 <td>
  jesstess, jl, ktarnowski, palhmbs, paulproteus, viv
  <br>
 </td>
</tr>

<tr>
 <th>Assigned To</th>
 <td>paulproteus</td>
 <th>Keywords</th>
 <td>
  
  
 </td>
</tr>







</table>
</form>



<p>Created on <b>2011-02-22.00:23:48</b> by <b>paulproteus</b>, last changed <b>2011-07-12.20:17:55</b> by <b>paulproteus</b>.</p>

<table class="files">
 <tr><th colspan="5" class="header">Files</th></tr>
 <tr>
  <th>File name</th>
  <th>Uploaded</th>
  <th>Type</th>
  <th>Edit</th>
  <th>Remove</th>
 </tr>
 <tr>
  <td>
   <a href="file357/0001-issue-310-Fixing-HitCountCache.patch">0001-issue-310-Fixing-HitCountCache.patch</a>
  </td>
  <td>
   <span>viv</span>,
   <span>2011-06-22.06:39:05</span>
  </td>
  <td>application/octet-stream</td>
  <td>
  </td>
  <td>
   
  </td>
 </tr>
 <tr>
  <td>
   <a href="file358/0002-issue-310-Fixing-HitCountCache.patch">0002-issue-310-Fixing-HitCountCache.patch</a>
  </td>
  <td>
   <span>viv</span>,
   <span>2011-06-22.06:39:12</span>
  </td>
  <td>application/octet-stream</td>
  <td>
  </td>
  <td>
   
  </td>
 </tr>
 <tr>
  <td>
   <a href="file359/0003-issue-310-Fixing-HitCountCache.patch">0003-issue-310-Fixing-HitCountCache.patch</a>
  </td>
  <td>
   <span>viv</span>,
   <span>2011-06-22.06:39:24</span>
  </td>
  <td>application/octet-stream</td>
  <td>
  </td>
  <td>
   
  </td>
 </tr>
 <tr>
  <td>
   <a href="file363/0004-Updated-comments-when-cache-count-value-is-0.patch">0004-Updated-comments-when-cache-count-value-is-0.patch</a>
  </td>
  <td>
   <span>viv</span>,
   <span>2011-06-27.00:09:01</span>
  </td>
  <td>application/octet-stream</td>
  <td>
  </td>
  <td>
   
  </td>
 </tr>
 <tr>
  <td>
   <a href="file364/0005-removed-import-of-Timestamp-and-instead-referred-by-.patch">0005-removed-import-of-Timestamp-and-instead-referred-by-.patch</a>
  </td>
  <td>
   <span>viv</span>,
   <span>2011-06-27.00:09:10</span>
  </td>
  <td>application/octet-stream</td>
  <td>
  </td>
  <td>
   
  </td>
 </tr>
 <tr>
  <td>
   <a href="file367/unnamed">unnamed</a>
  </td>
  <td>
   <span>viv</span>,
   <span>2011-07-07.04:09:27</span>
  </td>
  <td>text/html</td>
  <td>
  </td>
  <td>
   
  </td>
 </tr>
</table>

<table class="messages">
 <tr><th colspan="4" class="header">Messages</th></tr>
 
  <tr>
   <th><a href="msg2167">msg2167 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-07-07.04:57:08</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>One issue popped up in the tests that I didn't catch in review.

I fixed it with this commit: 
<a href="http://gitorious.org/openhatch/oh-mainline/commit/5b680bf39cb4c147c07c1a583f2509ebe0597eaf">http://gitorious.org/openhatch/oh-mainline/commit/5b680bf39cb4c147c07c1a583f2509ebe0597eaf</a>

-- Asheesh.</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg2166">msg2166 (view)</a></th>
   <th>Author: viv</th>
   <th>Date: 2011-07-07.04:09:27</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Thanks for reviewing and implementing it.. I will look forward for
more bite-size fixes...

On Wed, Jul 6, 2011 at 8:26 PM, Asheesh Laroia &lt;<a href="mailto:bugs@openhatch.org">bugs@openhatch.org</a>&gt; wrote:

&gt;
&gt; Asheesh Laroia &lt;<a href="mailto:asheesh@asheesh.org">asheesh@asheesh.org</a>&gt; added the comment:
&gt;
&gt; Hi Vivek,
&gt;
&gt; I like the more descriptive git commit log messages for the 0004 and 0005
&gt; patches. In the future, try to make them all like that.
&gt;
&gt; I'm merging this work now and deploying. Thank you for it! The site is
&gt; actually
&gt; very likely to load faster now.
&gt;
&gt; ----------
&gt; milestone: 0.11.07 -&gt; 0.11.06
&gt; status: need-review -&gt; resolved
&gt;
&gt; __________________________________________
&gt; Roundup issue tracker &lt;<a href="mailto:bugs@openhatch.org">bugs@openhatch.org</a>&gt;
&gt; &lt;<a href="https://openhatch.org/bugs/issue310">https://openhatch.org/bugs/issue310</a>&gt;
&gt; __________________________________________
&gt;</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg2164">msg2164 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-07-07.03:26:54</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Hi Vivek,

I like the more descriptive git commit log messages for the 0004 and 0005
patches. In the future, try to make them all like that.

I'm merging this work now and deploying. Thank you for it! The site is actually
very likely to load faster now.</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg2131">msg2131 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-07-02.20:44:17</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Hi Viv! I didn't realize this was in need-review state. I'll review your patches, 
and if I would have accepted them on June 30, they get marked as part of the 
0.11.06 release.</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg2121">msg2121 (view)</a></th>
   <th>Author: viv</th>
   <th>Date: 2011-06-27.00:09:38</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Ready for review</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg2120">msg2120 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-06-25.22:12:29</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Hi Vivek,

Some feedback on the patches.

First, it would be good to write more meaningful commit log messages. It's good
that you have multiple commits with separate content, but you should explain in
the messages what they are about.

In mysite/search/controllers.py you do a "from mysite.base.models import
Timestamp", but mysite.base.models is already imported; it'd be better if you
don't add a new import but just refer to Timestamp the long way
(mysite.base.models.Timestamp) within that file.

I'm glad you added the logging that you did.

This comment:

+        # We need to be careful here, as a cached count of zero would be
+        # read here as a None value, when we only want to pick up an
+        # actual None value (corresponding to the cache key not
+        # existing).

seems odd. I would change it to:

"We need to be careful to check if the count is None, rather than just if the
count is a false value. That's because a value of zero is still a cached value;
if we just use a boolean test, we would mistake the zero value for an empty
cache and regenerate the cache needlessly."

Otherwise, in general, this code looks great. I haven't run the tests on it, but
it looks like it should pass them. If you resubmit with improved log messages, I
will run the tests and deploy.

And thanks for being persistent about getting review, and sorry it took so long.</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg2063">msg2063 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-06-09.02:38:59</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Hey Vivek,

This is looking better. I don't think it's quite there, though.

Here's some feedback, in order of increasing importance:

Not that important
------------------

I would advise making fewer changes per commit. Make a bunch of small commits 
that indicate individual pieces of work. For example, one way to reorganize 
things would be:

* First commit: Add the new hit_count_cache_timestamp stuff, and the method to 
the Query called get_hit_count_cache_key()
* Second commit: Add the tests for the new functionality
* Second commit: totally remove the old HitCountCache model, including its tests
* Third commit: Write a migration that removes the HitCountCache model

Something like that. I'm not totally sure that would work in this case, since 
you're changing current functionality, but anyway, smaller patches are always 
easier to review.

Somewhat important
------------------

It'd be great if you'd extract the "hit_count_cache_timestamp" string to a named 
constant somewhere.

In the new get_or_create_cached_hit_count() method, you call 
logging.info(hit_count). That log message isn't very useful without also knowing 
what the query is that we're caching. So maybe that could go in the log message, 
too.

In the post_bug_delete_increment_bug_model_timestamp() function, you change the 
indent level of the "always bump it" comment, but for no reason, it seems. If 
you're going to make whitespace changes like that, make them in a separate 
commit.

In the post_bug_save_delete_increment_hit_count_cache_timestamp() function, you 
indent the code deeper than I'd expect. Also, we don't have to bump the timestamp 
for the raw or created cases. (The "raw" case is when we are loading a data from 
a snapshot. The "created" case is when we learn about a new bug. It is safe to 
provide recommendations that ignore the presence of new bugs, so we don't have to 
bump the timestamp in this case. Basically, you can keep the current logic -- but 
if the logic is unclear, and you can make it clearer, then totally add comments.) 
Your changes aren't *wrong* per se, but they will bump the timestamp more often 
than we have to, thereby increasing server load.

Also, in the definition of the post_bug_save_increment_bug_model_timestamp() 
function, you should put a space after the commas in "sender,instance,**kwargs". 
I think you have excessive indenting there, too.

Showstoppers
------------

These are must-fix issues:

* In the original file, the models.signals.post_save.connect() call that binds 
Bug to post_bug_save_delete_increment_hit_count_cache_timestamp -- those calls 
are made at module import time. Instead, you make them as part of the 
post_bug_save_increment_bug_model_timestamp function (due to indenting changes).

Tips
----

In general, it's a really good idea to look at your patch in "gitk" or "git log -
p". I *urge* you to enable the color diff mode of git; it makes reading patches 
much easier. Check out <a href="http://book.git-scm.com/5_customizing_git.html">http://book.git-scm.com/5_customizing_git.html</a> (search for 
"color").

I think that's all I have. Fix the indenting, and resubmit, and you'll have a big 
changeset in.

My apologies if this seems like a long process. You're nearly done!</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg2057">msg2057 (view)</a></th>
   <th>Author: viv</th>
   <th>Date: 2011-06-07.06:02:36</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Please review the changes</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg2033">msg2033 (view)</a></th>
   <th>Author: viv</th>
   <th>Date: 2011-06-05.07:23:04</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Hi Asheesh,

Actually I initially created this patch using PyCharm and then realized that
the patch was not git compatible, So I thought of work on it more and test
the patch myself before sending for review/implementation, I communicated
the same to Paul also.
     If you feel the patch is reasonably ok then I wont do more work on
that, but the patch is verbatim implementation of pythonian4000 sample
implementation, I am already ashamed of not investing enough time to solve
it myself and it would be burden on me, if I take any credit for
the implementation. All glory to pythonian4000.
      I will implement the changes you suggested and send the patch by
Monday. Please let me know if there is anything else can be enhanced.

Thanks,

Vivek

On Sat, Jun 4, 2011 at 9:42 PM, Asheesh Laroia &lt;<a href="mailto:bugs@openhatch.org">bugs@openhatch.org</a>&gt; wrote:

&gt;
&gt; Asheesh Laroia &lt;<a href="mailto:asheesh@asheesh.org">asheesh@asheesh.org</a>&gt; added the comment:
&gt;
&gt; Vivek,
&gt;
&gt; This patch looks good at a first glance!
&gt;
&gt; Actually, it looks really really great. I think this is the highest-quality
&gt; patch
&gt; I have seen for a first or second or third contribution. Here are some of
&gt; the
&gt; things you did right:
&gt;
&gt; * Extensive commenting
&gt; * A test for the test suite right off the bat
&gt; * Extremely reasonable use of Django signals
&gt; * A completely proper migration
&gt;
&gt; I'm sitting here muttering to myself, "This is truly amazing." It's really
&gt; good
&gt; work.
&gt;
&gt; There are just a few things you should change. The first and most important
&gt; one
&gt; is the one palhmbs pointed out: You should submit your work as a git
&gt; format-patch
&gt; file. You should commit locally, then export it to a file.
&gt; <a href="http://openhatch.org/wiki/How_we_handle_patches">http://openhatch.org/wiki/How_we_handle_patches</a> and the git training
&gt; mission on
&gt; the OpenHatch site explain how to do this.
&gt;
&gt; Code-wise:
&gt;
&gt; * Use logging.debug(), not print
&gt; ** (Using "print" in a WSGI context isn't good. See also
&gt; <a href="http://blog.dscpl.com.au/2009/04/wsgi-and-printing-to-standard-output.html">http://blog.dscpl.com.au/2009/04/wsgi-and-printing-to-standard-output.html</a>)
&gt;
&gt; * Use a space after every comma
&gt; ** This is just a style thing, but it makes code more readable. For
&gt; example, in
&gt; the new get_hit_count_cache_key():
&gt;
&gt;        hit_count_cache_key = "hcc_%s_%s" %
&gt; (hashlib.sha1(hcc_timestamp.__str__()).hexdigest(),hashed_query)
&gt;
&gt; would become
&gt;
&gt;        hit_count_cache_key = "hcc_%s_%s" %
&gt; (hashlib.sha1(hcc_timestamp.__str__()).hexdigest(), hashed_query)
&gt;
&gt; Small change.
&gt;
&gt; * Always use consistent indenting, even for comment lines. Here:
&gt;
&gt; +    def get_or_create_cached_hit_count(self):
&gt; +       # Get the cache key used to store the hit count.
&gt; +        hit_count_cache_key = self.get_hit_count_cache_key()
&gt;
&gt; should be:
&gt;
&gt; +    def get_or_create_cached_hit_count(self):
&gt; +        # Get the cache key used to store the hit count.
&gt; +        hit_count_cache_key = self.get_hit_count_cache_key()
&gt;
&gt; Move that comment one space deeper in.
&gt;
&gt; * You have made the
&gt; post_bug_save_delete_increment_hit_count_cache_timestamp()
&gt; function be part of the WannaHelperNote class due to indenting it. You
&gt; should
&gt; undo the indenting so that it's not part of the class definition.
&gt;
&gt; Fix those, and moreover, resubmit it as a git format-patch file. Thanks for
&gt; the
&gt; work you've done here!
&gt;
&gt; __________________________________________
&gt; Roundup issue tracker &lt;<a href="mailto:bugs@openhatch.org">bugs@openhatch.org</a>&gt;
&gt; &lt;<a href="https://openhatch.org/bugs/issue310">https://openhatch.org/bugs/issue310</a>&gt;
&gt; __________________________________________
&gt;</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg2032">msg2032 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-06-05.04:42:51</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Vivek,

This patch looks good at a first glance!

Actually, it looks really really great. I think this is the highest-quality patch 
I have seen for a first or second or third contribution. Here are some of the 
things you did right:

* Extensive commenting
* A test for the test suite right off the bat
* Extremely reasonable use of Django signals
* A completely proper migration

I'm sitting here muttering to myself, "This is truly amazing." It's really good 
work.

There are just a few things you should change. The first and most important one 
is the one palhmbs pointed out: You should submit your work as a git format-patch 
file. You should commit locally, then export it to a file. 
<a href="http://openhatch.org/wiki/How_we_handle_patches">http://openhatch.org/wiki/How_we_handle_patches</a> and the git training mission on 
the OpenHatch site explain how to do this.

Code-wise:

* Use logging.debug(), not print
** (Using "print" in a WSGI context isn't good. See also 
<a href="http://blog.dscpl.com.au/2009/04/wsgi-and-printing-to-standard-output.html">http://blog.dscpl.com.au/2009/04/wsgi-and-printing-to-standard-output.html</a> )

* Use a space after every comma
** This is just a style thing, but it makes code more readable. For example, in 
the new get_hit_count_cache_key():

        hit_count_cache_key = "hcc_%s_%s" % 
(hashlib.sha1(hcc_timestamp.__str__()).hexdigest(),hashed_query)

would become

        hit_count_cache_key = "hcc_%s_%s" % 
(hashlib.sha1(hcc_timestamp.__str__()).hexdigest(), hashed_query)

Small change.

* Always use consistent indenting, even for comment lines. Here:

+    def get_or_create_cached_hit_count(self):
+       # Get the cache key used to store the hit count.
+        hit_count_cache_key = self.get_hit_count_cache_key()

should be:

+    def get_or_create_cached_hit_count(self):
+        # Get the cache key used to store the hit count.
+        hit_count_cache_key = self.get_hit_count_cache_key()

Move that comment one space deeper in.

* You have made the post_bug_save_delete_increment_hit_count_cache_timestamp() 
function be part of the WannaHelperNote class due to indenting it. You should 
undo the indenting so that it's not part of the class definition.

Fix those, and moreover, resubmit it as a git format-patch file. Thanks for the 
work you've done here!</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg1987">msg1987 (view)</a></th>
   <th>Author: palhmbs</th>
   <th>Date: 2011-06-01.09:23:40</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Viv, The Patch isn't a git patch - take a look at how we handle patches...

<a href="http://openhatch.org/wiki/How_we_handle_patches">http://openhatch.org/wiki/How_we_handle_patches</a>

Moving to 11.06, cause it just not May anymore :'(</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg1981">msg1981 (view)</a></th>
   <th>Author: viv</th>
   <th>Date: 2011-06-01.03:49:00</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Thanks to the changes done by Pythonian4000. I am 
submitting the patch for 310.</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg1780">msg1780 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-05-01.07:54:30</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>I'm moving this forward to 0.11.05, since it's not yet done, and it's May in my 
time zone!</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg1743">msg1743 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-04-25.22:34:46</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre><a href="http://docs.djangoproject.com/en/1.2/topics/cache/">http://docs.djangoproject.com/en/1.2/topics/cache/</a> explains more about the Django 
cache framework.</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg1372">msg1372 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-03-26.21:13:56</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>(This is important, but it's not assigned to anyone, so for now I am removing it
from the milestone.)</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg1292">msg1292 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-03-19.20:45:53</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Jennifer,

Can I interest you in looking into this ticket?

I think that fixing it would be supremely helpful. If we fix this, for me,
logins will change from taking 60 seconds to taking, like, 1.

It's also reasonably easy if you know about Python class syntax, and how to run
the OpenHatch test suite, and know/want to learn the Django cache API. We can
mentor you in any of those that you want to learn.

(I've added you as "nosy" so you see this update.)</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg1244">msg1244 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-03-12.22:01:05</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>I plan to write up a Starling Bounty for this. Here's the core issue:

We use a Django model called the HitCountCache in a few places. This strategy
has a flaw: it means that lots of page loads create writes to the database.

We should replace this with use of the django cache framework, and store the
cached hit counts in memcached instead.

Here's the work plan that it would take to do the above:

1. Change the HitCountCache class so that it is not a database table, but
instead a simple class that wraps the django cache framework

2. Make sure the tests pass

3. Submit a patch with the above.

4. Clean-up the code further by moving all the HitCountCache-related code out of
models.py into a new file you would create, mysite/search/helpers.py 

5. Make sure the tests all pass (-:

6. Submit a patch again!</pre>
   </td>
  </tr>
 
 
  <tr>
   <th><a href="msg1149">msg1149 (view)</a></th>
   <th>Author: paulproteus</th>
   <th>Date: 2011-02-22.00:23:48</th>
   <th>
    
   </th>
  </tr>
  <tr>
   <td colspan="4" class="content">
    <pre>Traceback (most recent call last):

  File
"/home/deploy/milestone-a.buildout/parts/production/django/core/handlers/base.py",
line 99, in get_response
    response = callback(request, *callback_args, **callback_kwargs)

  File "&lt;string&gt;", line 2, in home

  File "/home/deploy/milestone-a.buildout/mysite/base/decorators.py", line 67,
in view
    request, template, view_data = func(*args, **kw)

  File "/home/deploy/milestone-a.buildout/mysite/base/views.py", line 94, in home
    suggested_searches = request.user.get_profile().get_recommended_search_terms()

  File "/home/deploy/milestone-a.buildout/mysite/profile/models.py", line 302,
in get_recommended_search_terms
    return Person.only_terms_with_results(terms)

  File "/home/deploy/milestone-a.buildout/mysite/profile/models.py", line 277,
in only_terms_with_results
    hit_count = query.get_or_create_cached_hit_count()

  File "/home/deploy/milestone-a.buildout/mysite/search/controllers.py", line
366, in get_or_create_cached_hit_count
    defaults={'hit_count': count})

  File
"/home/deploy/milestone-a.buildout/parts/production/django/db/models/manager.py", line
122, in get_or_create
    return self.get_query_set().get_or_create(**kwargs)

  File
"/home/deploy/milestone-a.buildout/parts/production/django/db/models/query.py",
line 336, in get_or_create
    obj.save(force_insert=True)

  File
"/home/deploy/milestone-a.buildout/parts/production/django/db/models/base.py",
line 431, in save
    self.save_base(force_insert=force_insert, force_update=force_update)

  File
"/home/deploy/milestone-a.buildout/parts/production/django/db/models/base.py",
line 516, in save_base
    result = manager._insert(values, return_id=update_pk)

  File
"/home/deploy/milestone-a.buildout/parts/production/django/db/models/manager.py", line
176, in _insert
    return insert_query(self.model, values, **kwargs)

  File
"/home/deploy/milestone-a.buildout/parts/production/django/db/models/query.py",
line 1109, in insert_query
    return query.execute_sql(return_id)

  File
"/home/deploy/milestone-a.buildout/parts/production/django/db/models/sql/subqueries.py",
line 324, in execute_sql
    cursor = super(InsertQuery, self).execute_sql(None)

  File
"/home/deploy/milestone-a.buildout/parts/production/django/db/models/sql/query.py",
line 2347, in execute_sql
    cursor.execute(sql, params)

  File
"/home/deploy/milestone-a.buildout/parts/production/django/db/backends/mysql/base.py",
line 84, in execute
    return self.cursor.execute(query, args)

  File
"/home/deploy/milestone-a.buildout/eggs/MySQL_python-1.2.3c1-py2.6-linux-i686.egg/MySQLdb/cursors.py",
line 173, in execute
    self.errorhandler(self, exc, value)

  File
"/home/deploy/milestone-a.buildout/eggs/MySQL_python-1.2.3c1-py2.6-linux-i686.egg/MySQLdb/connections.py",
line 36, in defaulterrorhandler
    raise errorclass, errorvalue

OperationalError: (1205, 'Lock wait timeout exceeded; try restarting transaction')

I guess the cached hit count should *not* live in the database. I guess it
should live in memcached.</pre>
   </td>
  </tr>
 
</table>

<table class="history"><tr><th colspan="4" class="header">
History
</th></tr><tr>
<th>Date</th>
<th>User</th>
<th>Action</th>
<th>Args</th>
</tr>
<tr><td>2011-07-12&nbsp;20:17:55</td><td>paulproteus</td><td>set</td><td>status: chatting -> resolved</td></tr>
<tr><td>2011-07-07&nbsp;04:57:08</td><td>paulproteus</td><td>set</td><td>messages:
  + <a href="msg2167">msg2167</a></td></tr>
<tr><td>2011-07-07&nbsp;04:09:27</td><td>viv</td><td>set</td><td>files:
  + <a href="file367">unnamed</a><br />status: resolved -> chatting<br />messages:
  + <a href="msg2166">msg2166</a></td></tr>
<tr><td>2011-07-07&nbsp;03:26:54</td><td>paulproteus</td><td>set</td><td>status: need-review -> resolved<br />messages:
  + <a href="msg2164">msg2164</a><br />milestone: <a href="milestone10">0.11.07</a> -> <a href="milestone9">0.11.06</a></td></tr>
<tr><td>2011-07-02&nbsp;20:44:17</td><td>paulproteus</td><td>set</td><td>assignedto: <a href="user79">viv</a> -> <a href="user3">paulproteus</a><br />messages:
  + <a href="msg2131">msg2131</a></td></tr>
<tr><td>2011-07-02&nbsp;20:10:21</td><td>palhmbs</td><td>set</td><td>milestone: <a href="milestone9">0.11.06</a> -> <a href="milestone10">0.11.07</a></td></tr>
<tr><td>2011-06-27&nbsp;00:09:39</td><td>viv</td><td>set</td><td>status: in-progress -> need-review<br />messages:
  + <a href="msg2121">msg2121</a></td></tr>
<tr><td>2011-06-27&nbsp;00:09:10</td><td>viv</td><td>set</td><td>files:
  + <a href="file364">0005-removed-import-of-Timestamp-and-instead-referred-by-.patch</a></td></tr>
<tr><td>2011-06-27&nbsp;00:09:02</td><td>viv</td><td>set</td><td>files:
  + <a href="file363">0004-Updated-comments-when-cache-count-value-is-0.patch</a></td></tr>
<tr><td>2011-06-25&nbsp;22:12:31</td><td>paulproteus</td><td>set</td><td>status: need-review -> in-progress<br />messages:
  + <a href="msg2120">msg2120</a></td></tr>
<tr><td>2011-06-22&nbsp;06:40:00</td><td>viv</td><td>set</td><td>status: in-progress -> need-review</td></tr>
<tr><td>2011-06-22&nbsp;06:39:29</td><td>viv</td><td>set</td><td>files:
  - <a href="file338">0001-issue310-replaced-HitCountCache-django-model-with-Dj.patch</a></td></tr>
<tr><td>2011-06-22&nbsp;06:39:25</td><td>viv</td><td>set</td><td>files:
  + <a href="file359">0003-issue-310-Fixing-HitCountCache.patch</a></td></tr>
<tr><td>2011-06-22&nbsp;06:39:12</td><td>viv</td><td>set</td><td>files:
  + <a href="file358">0002-issue-310-Fixing-HitCountCache.patch</a></td></tr>
<tr><td>2011-06-22&nbsp;06:39:05</td><td>viv</td><td>set</td><td>files:
  + <a href="file357">0001-issue-310-Fixing-HitCountCache.patch</a></td></tr>
<tr><td>2011-06-09&nbsp;02:39:00</td><td>paulproteus</td><td>set</td><td>status: need-review -> in-progress<br />messages:
  + <a href="msg2063">msg2063</a></td></tr>
<tr><td>2011-06-07&nbsp;06:02:36</td><td>viv</td><td>set</td><td>status: in-progress -> need-review<br />messages:
  + <a href="msg2057">msg2057</a></td></tr>
<tr><td>2011-06-07&nbsp;06:02:07</td><td>viv</td><td>set</td><td>files:
  + <a href="file338">0001-issue310-replaced-HitCountCache-django-model-with-Dj.patch</a></td></tr>
<tr><td>2011-06-07&nbsp;06:01:35</td><td>viv</td><td>set</td><td>files:
  - <a href="file308">Fixing_issue_310_modified_hitcount_cache_vivshrivastava@gmail_com.patch</a></td></tr>
<tr><td>2011-06-07&nbsp;06:01:32</td><td>viv</td><td>set</td><td>files:
  - <a href="file323">unnamed</a></td></tr>
<tr><td>2011-06-05&nbsp;07:23:04</td><td>viv</td><td>set</td><td>files:
  + <a href="file323">unnamed</a><br />messages:
  + <a href="msg2033">msg2033</a></td></tr>
<tr><td>2011-06-05&nbsp;04:42:51</td><td>paulproteus</td><td>set</td><td>messages:
  + <a href="msg2032">msg2032</a></td></tr>
<tr><td>2011-06-01&nbsp;09:23:40</td><td>palhmbs</td><td>set</td><td>messages:
  + <a href="msg1987">msg1987</a><br />milestone: <a href="milestone8">0.11.05</a> -> <a href="milestone9">0.11.06</a></td></tr>
<tr><td>2011-06-01&nbsp;03:49:00</td><td>viv</td><td>set</td><td>files:
  + <a href="file308">Fixing_issue_310_modified_hitcount_cache_vivshrivastava@gmail_com.patch</a><br />messages:
  + <a href="msg1981">msg1981</a></td></tr>
<tr><td>2011-05-28&nbsp;22:01:51</td><td>palhmbs</td><td>set</td><td>status: chatting -> in-progress</td></tr>
<tr><td>2011-05-01&nbsp;07:54:30</td><td>paulproteus</td><td>set</td><td>messages:
  + <a href="msg1780">msg1780</a><br />milestone: <a href="milestone7">0.11.04</a> -> <a href="milestone8">0.11.05</a></td></tr>
<tr><td>2011-04-30&nbsp;23:48:13</td><td>palhmbs</td><td>set</td><td>milestone: <a href="milestone8">0.11.05</a> -> <a href="milestone7">0.11.04</a></td></tr>
<tr><td>2011-04-30&nbsp;23:47:44</td><td>palhmbs</td><td>set</td><td>milestone: <a href="milestone1">later</a> -> <a href="milestone8">0.11.05</a></td></tr>
<tr><td>2011-04-27&nbsp;07:28:08</td><td>viv</td><td>set</td><td>assignedto: <a href="user79">viv</a><br />nosy:
  + <a href="user79">viv</a></td></tr>
<tr><td>2011-04-25&nbsp;22:34:46</td><td>paulproteus</td><td>set</td><td>messages:
  + <a href="msg1743">msg1743</a></td></tr>
<tr><td>2011-03-26&nbsp;21:14:05</td><td>paulproteus</td><td>set</td><td>milestone: <a href="milestone6">0.11.03</a> -> <a href="milestone1">later</a></td></tr>
<tr><td>2011-03-26&nbsp;21:13:56</td><td>paulproteus</td><td>set</td><td>messages:
  + <a href="msg1372">msg1372</a></td></tr>
<tr><td>2011-03-21&nbsp;08:38:00</td><td>palhmbs</td><td>set</td><td>nosy:
  + <a href="user42">palhmbs</a></td></tr>
<tr><td>2011-03-19&nbsp;20:45:56</td><td>paulproteus</td><td>set</td><td>nosy:
  + <a href="user70">jl</a><br />messages:
  + <a href="msg1292">msg1292</a></td></tr>
<tr><td>2011-03-12&nbsp;22:01:30</td><td>paulproteus</td><td>set</td><td>title: The front page should be read-only, with regard to the database -> Remove our HitCountCache django model, and use Django's caching framework instead</td></tr>
<tr><td>2011-03-12&nbsp;22:01:05</td><td>paulproteus</td><td>set</td><td>status: unread -> chatting<br />messages:
  + <a href="msg1244">msg1244</a></td></tr>
<tr><td>2011-03-12&nbsp;21:52:24</td><td>paulproteus</td><td>set</td><td>milestone: <a href="milestone1">later</a> -> <a href="milestone6">0.11.03</a></td></tr>
<tr><td>2011-02-22&nbsp;00:23:48</td><td>paulproteus</td><td>create</td><td></td></tr>
</table>

</div>

</td>
</tr>

</table>



</body>
</html>

<!-- SHA: cef943195fefd743431d22c020eef27edd6255e1 -->
