[{"pk": 2, "model": "search.buildhelper", "fields": {"project": 2462, "modified_date": "2011-07-06 16:14:13", "default_frustration_handler": "http://cuteoverload.com/", "created_date": "2011-07-05 15:53:32"}}, {"pk": 1, "model": "search.buildhelperstep", "fields": {"modified_date": "2011-07-06 15:32:37", "name": "Use a machine running Debian or Ubuntu", "hint": "", "time": 0, "is_prerequisite": true, "frustration_handler": "http://cuteoverload.com/", "command": " ", "created_date": "2011-07-05 15:58:54", "is_checked": false, "buildhelper": 2, "description": "We develop on Debian 6.0 and Ubuntu 10.x, and currently we run the openhatch.org website on Debian 6.0. If you're running a different operating system, this buildhelper may not work for you."}}, {"pk": 3, "model": "search.buildhelperstep", "fields": {"modified_date": "2011-07-06 16:14:13", "name": "Install dependencies", "hint": "", "time": 5, "is_prerequisite": false, "frustration_handler": "", "command": "sudo apt-get install python2.6-dev python-libxml2 memcached python-mysqldb python-setuptools libxml2-dev libxslt-dev mysql-server mysql-client python-xapian python-setuptools python-imaging subversion", "created_date": "2011-07-06 15:32:37", "is_checked": false, "buildhelper": 2, "description": "Most of the dependencies are handled by \"buildout\" -- more on that later. But you must install a few using your system package manager. The command listed is what we use for a Debian system.\r\n\r\nIt's important that you get Python 2.6 or greater -- some of the OpenHatch code depends on Python 2.6 or higher.\r\n\r\nSubversion is a dependency ONLY if you expect to run unit tests or work with the missions."}}, {"pk": 4, "model": "search.buildhelperstep", "fields": {"modified_date": "2011-07-06 16:14:13", "name": "Start memcached", "hint": "http://docs.djangoproject.com/en/dev/topics/cache/", "time": 1, "is_prerequisite": false, "frustration_handler": "", "command": "sudo /etc/init.d/memcached start", "created_date": "2011-07-06 15:32:37", "is_checked": false, "buildhelper": 2, "description": "We use memcached to save the output of particularly slow functions in the OpenHatch code.\r\n\r\nIf memcached complains that it is not enabled, configure it by reading `/etc/default/memcached`. It's also possible that memcached may have been started automatically by your system when you installed it."}}, {"pk": 5, "model": "search.buildhelperstep", "fields": {"modified_date": "2011-07-06 16:14:13", "name": "Run buildout", "hint": "", "time": 10, "is_prerequisite": false, "frustration_handler": "", "command": "python2.6 bootstrap.py\r\nbin/buildout", "created_date": "2011-07-06 15:32:37", "is_checked": false, "buildhelper": 2, "description": "OpenHatch uses Buildout to manage dependencies.\r\n\r\nRun these commands from the top level directory of the repository, and grab some coffee, snacks, or both. This may take awhile.\r\n\r\nYou'll download a whole bunch of Python code and run other setup tasks. This is controlled by setup.py and buildout.cfg in the codebase."}}, {"pk": 6, "model": "search.buildhelperstep", "fields": {"modified_date": "2011-07-06 16:14:13", "name": "Make sure you know how to connect to MySQL", "hint": "", "time": 1, "is_prerequisite": false, "frustration_handler": "", "command": "mysql -u root -p", "created_date": "2011-07-06 15:32:37", "is_checked": false, "buildhelper": 2, "description": "Generally, to create a database, you have to be root. To open a MySQL session, type in the above command, then type your MySQL root password. \r\n\r\nTo exit, type \"exit\" and press enter."}}, {"pk": 7, "model": "search.buildhelperstep", "fields": {"modified_date": "2011-07-06 16:14:14", "name": "Run the database creation script and set up permissions", "hint": "", "time": 3, "is_prerequisite": false, "frustration_handler": "", "command": "mysql -uroot -p < mysite/scripts/database_01_create.sql", "created_date": "2011-07-06 15:32:37", "is_checked": false, "buildhelper": 2, "description": "If you want to know what the script does, read the file. It is reasonably well-commented.\r\n\r\n(A note: If you ever decide you want to drop the database, just send \"DROP DATABASE oh_milestone_a\" to MySQL, then re-run the database creation script. You do not have to recreate the users.)"}}, {"pk": 8, "model": "search.buildhelperstep", "fields": {"modified_date": "2011-07-06 16:14:14", "name": "Sync the database", "hint": "", "time": 1, "is_prerequisite": false, "frustration_handler": "", "command": "exit\r\n./bin/mysite syncdb --noinput", "created_date": "2011-07-06 15:32:37", "is_checked": false, "buildhelper": 2, "description": "Exit from MySQL, and run this command from the top level directory.\r\n\r\nBy passing \"noinput\", you request that Django not ask you questions. It's important that we not let Django create a super-user at this stage."}}, {"pk": 9, "model": "search.buildhelperstep", "fields": {"modified_date": "2011-07-06 16:14:14", "name": "Run database migrations", "hint": "", "time": 2, "is_prerequisite": false, "frustration_handler": "", "command": "./bin/mysite migrate", "created_date": "2011-07-06 15:32:37", "is_checked": false, "buildhelper": 2, "description": "The README has some suggestions if this doesn't \"just work\"."}}, {"pk": 10, "model": "search.buildhelperstep", "fields": {"modified_date": "2011-07-06 16:14:14", "name": "Run the development server", "hint": "", "time": 2, "is_prerequisite": false, "frustration_handler": "", "command": "./bin/mysite runserver\r\n\r\n# or\r\n\r\nbin/mysite runserver IP:PORT\r\n", "created_date": "2011-07-06 15:32:37", "is_checked": false, "buildhelper": 2, "description": "Run the 'runserver' command. If everything went well and the server started you should see something like this:\r\n\r\n    Django version 1.1.2, using settings 'mysite.settings'\r\n    Development server is running at http://127.0.0.1:8000/\r\n    Quit the server with CONTROL-C.\r\n\r\nin your shell window. If you want to run the server on an IP other than loopback, use the syntax 'bin/mysite runserver IP:PORT' where IP and PORT are what IP and port you want the server to run on. \r\n\r\nNow load http://localhost:8000/ (or your custom IP and/or port address) in your web browser. If you see a familiar-looking page then congratulations! You now have your own personal OpenHatch server to hack away at!"}}]
