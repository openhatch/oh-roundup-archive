From d5a892764af26cb9a9b56f79c74cdb29eb842831 Mon Sep 17 00:00:00 2001
From: Jack Grigg <me@jackgrigg.com>
Date: Fri, 30 Jul 2010 13:39:23 +0000
Subject: [PATCH] Extended  ObjectFromDict to recurse over dictionaries inside lists,
 added some tests for the Google Code importer, and got the tests
 to pass =)

---
 mysite/base/helpers.py               |    7 +-
 mysite/customs/bugtrackers/google.py |    6 +-
 mysite/customs/tests.py              |  214 ++++++++++++++++++++++++++++++++++
 3 files changed, 224 insertions(+), 3 deletions(-)

diff --git a/mysite/base/helpers.py b/mysite/base/helpers.py
index b14e1d4..5d0ebd2 100644
--- a/mysite/base/helpers.py
+++ b/mysite/base/helpers.py
@@ -20,8 +20,11 @@ def json_response(python_object):
 class ObjectFromDict(object):
     def __init__(self, data, recursive = False):
         for key in data:
-            if recursive and type(data[key]) == dict:
-                data[key] = ObjectFromDict(data[key], recursive = recursive)
+            if recursive:
+                if type(data[key]) == dict:
+                    data[key] = ObjectFromDict(data[key], recursive=recursive)
+                elif type(data[key]) == list:
+                    data[key] = [ObjectFromDict(item, recursive=recursive) for item in data[key]]
             setattr(self, key, data[key])
 
 def assert_or_pdb(expression):
diff --git a/mysite/customs/bugtrackers/google.py b/mysite/customs/bugtrackers/google.py
index a9cf825..6b2ba12 100644
--- a/mysite/customs/bugtrackers/google.py
+++ b/mysite/customs/bugtrackers/google.py
@@ -130,6 +130,10 @@ class GoogleBug(object):
             status = issue.status.text
         else:
             status = ''
+        if type(issue.author) == type([]):
+            author = issue.author[0]
+        else:
+            author = issue.author
 
         ret_dict = {
                 'title': issue.title.text,
@@ -139,7 +143,7 @@ class GoogleBug(object):
                 'people_involved': self.google_count_people_involved(issue),
                 'date_reported': self.google_date_to_datetime(issue.published.text),
                 'last_touched': self.google_date_to_datetime(issue.updated.text),
-                'submitter_username': issue.author[0].name.text,
+                'submitter_username': author.name.text,
                 'submitter_realname': '', # Can't get this from Google
                 'canonical_bug_link': self.as_bug_specific_url(),
                 'looks_closed': (issue.state.text == 'closed')
diff --git a/mysite/customs/tests.py b/mysite/customs/tests.py
index bb2ffa6..1b3e871 100644
--- a/mysite/customs/tests.py
+++ b/mysite/customs/tests.py
@@ -1291,6 +1291,16 @@ class DailyBugImporter(django.test.TestCase):
         mock_error.side_effect = ValueError()
         self.assertRaises(ValueError, mysite.customs.management.commands.customs_daily_tasks.Command().find_and_update_enabled_google_instances)
 
+def google_tests_sympy_extract_tracker_specific_data(issue, ret_dict):
+    # Make modifications to ret_dict using provided atom data
+    labels = [label.text for label in issue.label]
+    ret_dict['good_for_newcomers'] = ('EasyToFix' in labels)
+    ret_dict['bite_size_tag_name'] = 'EasyToFix'
+    # Check whether documentation bug
+    ret_dict['concerns_just_documentation'] = ('Documentation' in labels)
+    # Then pass ret_dict back
+    return ret_dict
+
 class GoogleCodeBugTracker(django.test.TestCase):
     @mock.patch('mysite.customs.bugtrackers.google.GoogleBug.get_bug_atom_data')
     def test__bug_id_from_bug_data(self, mock_thing):
@@ -1299,5 +1309,209 @@ class GoogleCodeBugTracker(django.test.TestCase):
         bug_id = gb._bug_id_from_bug_data()
         self.assertEqual(bug_id, 3)
 
+    @mock.patch('mysite.customs.bugtrackers.google.GoogleBug.get_bug_atom_data')
+    def test_create_google_data_dict_with_everything(self, mock_data):
+        atom_dict = {
+                'id': {'text': 'http://code.google.com/feeds/issues/p/sympy/issues/full/1215'},
+                'published': {'text': '2008-11-24T11:15:58.000Z'},
+                'updated': {'text': '2009-12-06T23:01:11.000Z'},
+                'title': {'text': 'fix html documentation'},
+                'content': {'text': """http://docs.sympy.org/modindex.html
+
+I don't see for example the solvers module"""},
+                'author': {'name': {'text': 'fabian.seoane'}},
+                'cc': [
+                    {'username': {'text': 'asmeurer'}}
+                    ],
+                'owner': {'username': {'text': 'Vinzent.Steinberg'}},
+                'label': [
+                    {'text': 'Type-Defect'},
+                    {'text': 'Priority-Critical'},
+                    {'text': 'Documentation'},
+                    {'text': 'Milestone-Release0.6.6'}
+                    ],
+                'state': {'text': 'closed'},
+                'status': {'text': 'Fixed'}
+                }
+        mock_data.return_value = mysite.base.helpers.ObjectFromDict(atom_dict, recursive=True)
+        client = mysite.customs.bugtrackers.google.get_client()
+        gb = mysite.customs.bugtrackers.google.GoogleBug(
+            google_name='sympy',
+            client=client,
+            bug_id=1215)
+
+        got = gb.as_data_dict_for_bug_object(google_tests_sympy_extract_tracker_specific_data)
+        wanted = {'title': 'fix html documentation',
+                  'description': """http://docs.sympy.org/modindex.html
+
+I don't see for example the solvers module""",
+                  'status': 'Fixed',
+                  'importance': 'Critical',
+                  'people_involved': 3,
+                  'date_reported': datetime.datetime(2008, 11, 24, 11, 15, 58),
+                  'last_touched': datetime.datetime(2009, 12, 06, 23, 01, 11),
+                  'looks_closed': True,
+                  'submitter_username': 'fabian.seoane',
+                  'submitter_realname': '',
+                  'canonical_bug_link': 'http://code.google.com/p/sympy/issues/detail?id=1215',
+                  'good_for_newcomers': False,
+                  'bite_size_tag_name': 'EasyToFix',
+                  'concerns_just_documentation': True,
+                  }
+        self.assertEqual(wanted, got)
+
+    @mock.patch('mysite.customs.bugtrackers.google.GoogleBug.get_bug_atom_data')
+    def test_create_google_data_dict_author_in_list(self, mock_data):
+        atom_dict = {
+                'id': {'text': 'http://code.google.com/feeds/issues/p/sympy/issues/full/1215'},
+                'published': {'text': '2008-11-24T11:15:58.000Z'},
+                'updated': {'text': '2009-12-06T23:01:11.000Z'},
+                'title': {'text': 'fix html documentation'},
+                'content': {'text': """http://docs.sympy.org/modindex.html
+
+I don't see for example the solvers module"""},
+                'author': [{'name': {'text': 'fabian.seoane'}}],
+                'cc': [
+                    {'username': {'text': 'asmeurer'}}
+                    ],
+                'owner': {'username': {'text': 'Vinzent.Steinberg'}},
+                'label': [
+                    {'text': 'Type-Defect'},
+                    {'text': 'Priority-Critical'},
+                    {'text': 'Documentation'},
+                    {'text': 'Milestone-Release0.6.6'}
+                    ],
+                'state': {'text': 'closed'},
+                'status': {'text': 'Fixed'}
+                }
+        mock_data.return_value = mysite.base.helpers.ObjectFromDict(atom_dict, recursive=True)
+        client = mysite.customs.bugtrackers.google.get_client()
+        gb = mysite.customs.bugtrackers.google.GoogleBug(
+            google_name='sympy',
+            client=client,
+            bug_id=1215)
+
+        got = gb.as_data_dict_for_bug_object(google_tests_sympy_extract_tracker_specific_data)
+        wanted = {'title': 'fix html documentation',
+                  'description': """http://docs.sympy.org/modindex.html
+
+I don't see for example the solvers module""",
+                  'status': 'Fixed',
+                  'importance': 'Critical',
+                  'people_involved': 3,
+                  'date_reported': datetime.datetime(2008, 11, 24, 11, 15, 58),
+                  'last_touched': datetime.datetime(2009, 12, 06, 23, 01, 11),
+                  'looks_closed': True,
+                  'submitter_username': 'fabian.seoane',
+                  'submitter_realname': '',
+                  'canonical_bug_link': 'http://code.google.com/p/sympy/issues/detail?id=1215',
+                  'good_for_newcomers': False,
+                  'bite_size_tag_name': 'EasyToFix',
+                  'concerns_just_documentation': True,
+                  }
+        self.assertEqual(wanted, got)
+
+    @mock.patch('mysite.customs.bugtrackers.google.GoogleBug.get_bug_atom_data')
+    def test_create_google_data_dict_owner_in_list(self, mock_data):
+        atom_dict = {
+                'id': {'text': 'http://code.google.com/feeds/issues/p/sympy/issues/full/1215'},
+                'published': {'text': '2008-11-24T11:15:58.000Z'},
+                'updated': {'text': '2009-12-06T23:01:11.000Z'},
+                'title': {'text': 'fix html documentation'},
+                'content': {'text': """http://docs.sympy.org/modindex.html
+
+I don't see for example the solvers module"""},
+                'author': {'name': {'text': 'fabian.seoane'}},
+                'cc': [
+                    {'username': {'text': 'asmeurer'}}
+                    ],
+                'owner': [{'username': {'text': 'Vinzent.Steinberg'}}],
+                'label': [
+                    {'text': 'Type-Defect'},
+                    {'text': 'Priority-Critical'},
+                    {'text': 'Documentation'},
+                    {'text': 'Milestone-Release0.6.6'}
+                    ],
+                'state': {'text': 'closed'},
+                'status': {'text': 'Fixed'}
+                }
+        mock_data.return_value = mysite.base.helpers.ObjectFromDict(atom_dict, recursive=True)
+        client = mysite.customs.bugtrackers.google.get_client()
+        gb = mysite.customs.bugtrackers.google.GoogleBug(
+            google_name='sympy',
+            client=client,
+            bug_id=1215)
+
+        got = gb.as_data_dict_for_bug_object(google_tests_sympy_extract_tracker_specific_data)
+        wanted = {'title': 'fix html documentation',
+                  'description': """http://docs.sympy.org/modindex.html
+
+I don't see for example the solvers module""",
+                  'status': 'Fixed',
+                  'importance': 'Critical',
+                  'people_involved': 3,
+                  'date_reported': datetime.datetime(2008, 11, 24, 11, 15, 58),
+                  'last_touched': datetime.datetime(2009, 12, 06, 23, 01, 11),
+                  'looks_closed': True,
+                  'submitter_username': 'fabian.seoane',
+                  'submitter_realname': '',
+                  'canonical_bug_link': 'http://code.google.com/p/sympy/issues/detail?id=1215',
+                  'good_for_newcomers': False,
+                  'bite_size_tag_name': 'EasyToFix',
+                  'concerns_just_documentation': True,
+                  }
+        self.assertEqual(wanted, got)
+
+    @mock.patch('mysite.customs.bugtrackers.google.GoogleBug.get_bug_atom_data')
+    def test_create_google_data_dict_without_status(self, mock_data):
+        atom_dict = {
+                'id': {'text': 'http://code.google.com/feeds/issues/p/sympy/issues/full/1215'},
+                'published': {'text': '2008-11-24T11:15:58.000Z'},
+                'updated': {'text': '2009-12-06T23:01:11.000Z'},
+                'title': {'text': 'fix html documentation'},
+                'content': {'text': """http://docs.sympy.org/modindex.html
+
+I don't see for example the solvers module"""},
+                'author': {'name': {'text': 'fabian.seoane'}},
+                'cc': [
+                    {'username': {'text': 'asmeurer'}}
+                    ],
+                'owner': {'username': {'text': 'Vinzent.Steinberg'}},
+                'label': [
+                    {'text': 'Type-Defect'},
+                    {'text': 'Priority-Critical'},
+                    {'text': 'Documentation'},
+                    {'text': 'Milestone-Release0.6.6'}
+                    ],
+                'state': {'text': 'closed'},
+                'status': None
+                }
+        mock_data.return_value = mysite.base.helpers.ObjectFromDict(atom_dict, recursive=True)
+        client = mysite.customs.bugtrackers.google.get_client()
+        gb = mysite.customs.bugtrackers.google.GoogleBug(
+            google_name='sympy',
+            client=client,
+            bug_id=1215)
+
+        got = gb.as_data_dict_for_bug_object(google_tests_sympy_extract_tracker_specific_data)
+        wanted = {'title': 'fix html documentation',
+                  'description': """http://docs.sympy.org/modindex.html
+
+I don't see for example the solvers module""",
+                  'status': '',
+                  'importance': 'Critical',
+                  'people_involved': 3,
+                  'date_reported': datetime.datetime(2008, 11, 24, 11, 15, 58),
+                  'last_touched': datetime.datetime(2009, 12, 06, 23, 01, 11),
+                  'looks_closed': True,
+                  'submitter_username': 'fabian.seoane',
+                  'submitter_realname': '',
+                  'canonical_bug_link': 'http://code.google.com/p/sympy/issues/detail?id=1215',
+                  'good_for_newcomers': False,
+                  'bite_size_tag_name': 'EasyToFix',
+                  'concerns_just_documentation': True,
+                  }
+        self.assertEqual(wanted, got)
+
 # vim: set nu:
 
-- 
1.7.1

