From 415b7aba5d5c0cd1c6dc1fb652447a9130eca872 Mon Sep 17 00:00:00 2001
From: Jack Grigg <me@jackgrigg.com>
Date: Fri, 30 Jul 2010 06:33:43 +0000
Subject: [PATCH] Delete Trac bugs whose bug URL returns a 404.

---
 mysite/customs/bugtrackers/trac.py |   15 ++++++++++++++-
 mysite/customs/tests.py            |   18 ++++++++++++++++++
 2 files changed, 32 insertions(+), 1 deletions(-)

diff --git a/mysite/customs/bugtrackers/trac.py b/mysite/customs/bugtrackers/trac.py
index 74d6a79..749cf7b 100644
--- a/mysite/customs/bugtrackers/trac.py
+++ b/mysite/customs/bugtrackers/trac.py
@@ -3,6 +3,7 @@ import csv
 import datetime
 import logging
 import urlparse
+import urllib2
 
 import dateutil.parser
 import lxml.html
@@ -242,7 +243,19 @@ class TracBugTracker(object):
         # Okay, fine, we need to actually refresh it.
         logging.info("[Trac] Refreshing bug %d from %s." %
                      (bug_id, self.project_name))
-        data = tb.as_data_dict_for_bug_object(self.extract_tracker_specific_data)
+        # For some unknown reason, some trackers choose to delete some bugs entirely instead
+        # of just marking them as closed. That is fine for bugs we haven't yet pulled, but
+        # if the bug is already being tracked then we get a 404 error. This catacher looks
+        # for a 404 and deletes the bug if it occurs.
+        try:
+            data = tb.as_data_dict_for_bug_object(self.extract_tracker_specific_data)
+        except urllib2.HTTPError, e:
+            if e.code == 404:
+                logging.error("[Track] ERROR: Bug %d returned 404, deleting..." % bug_id)
+                bug.delete()
+                return
+            else:
+                raise e
 
         for key in data:
             value = data[key]
diff --git a/mysite/customs/tests.py b/mysite/customs/tests.py
index a264c40..bb2ffa6 100644
--- a/mysite/customs/tests.py
+++ b/mysite/customs/tests.py
@@ -1083,6 +1083,24 @@ class TracBug(django.test.TestCase):
                   }
         self.assertEqual(wanted, got)
 
+    @mock.patch('mysite.customs.ohloh.mechanize_get')
+    def test_bug_that_404s_is_deleted(self, mock_error):
+        mock_error.side_effect = generate_404
+
+        dummy_project = Project.create_dummy()
+        bug = Bug()
+        bug.project = dummy_project
+        bug.canonical_bug_link = 'http://twistedmatrix.com/trac/ticket/1234'
+        bug.date_reported = datetime.datetime.utcnow()
+        bug.last_touched = datetime.datetime.utcnow()
+        bug.last_polled = datetime.datetime.utcnow() - datetime.timedelta(days=2)
+        bug.save()
+        self.assert_(Bug.all_bugs.count() == 1)
+
+        twisted = mysite.customs.bugtrackers.trac.TwistedTrac()
+        twisted.refresh_all_bugs()
+        self.assert_(Bug.all_bugs.count() == 0)
+
 class LineAcceptorTest(django.test.TestCase):
     def test(self):
 
-- 
1.7.1

